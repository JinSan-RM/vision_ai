Script,Result_from_GPT,openai_result
https://www.google-analytics.com/analytics.js,죄송합니다. 제가 요청하신 내용을 해석할 수 없습니다. 다른 도움이 필요하시면 무엇이든 물어보세요.,
https://www.googletagmanager.com/gtag/js?id=G-CM4M0JS76Y&l=dataLayer&cx=c,"해당 스크립트는 Google Tag Manager를 통해 데이터를 추적하고 분석하기 위한 것으로 보입니다. ""G-CM4M0JS76Y""와 ""dataLayer"" 값이 추출되었습니다.",
https://cr.acecounter.com/Web/cookiesync.js?gc=AS2A40235064849&rd=1715247369747,죄송합니다. 해당 링크는 저의 보안 정책으로 인해 열 수 없습니다. 하지만 링크의 내용을 기반으로 스크립트를 해석해드릴 수 있습니다. 스크립트를 복사하여 여기에 붙여넣어 주시면 해당 스크립트의 내용을 해석하여 결과를 알려드리겠습니다.,
https://assets3.cre.ma/widgets/assets/pc-2816ba76a64ca46a1b9ed5db64730561de3ca23fc19e8aeea42fd1b597dea7f6.js,"죄송합니다. 저는 외부 링크의 내용을 해석하거나 실행할 수 없습니다. 그러나 만약 해당 링크가 JavaScript 스크립트를 포함하고 있다면, 그 스크립트를 분석하여 단어 태그 형식으로 결과를 제공할 수 있습니다. 스크립트를 직접 복사하여 붙여넣거나, 스크립트 내용을 제공해주시면 도와드릴 수 있습니다.",
https://widgets.cre.ma/attrangs.co.kr/init.js,죄송합니다. 보안 상의 이유로 외부 링크를 통한 스크립트 해석은 제한되어 있습니다. 다른 질문이 있으시면 도와드리겠습니다.,
https://www.googletagmanager.com/gtag/js?id=UA-141624268-1&l=dataLayer&cx=c,"해당 스크립트는 구글 태그 매니저 스크립트입니다. 스크립트에서 추출된 값은 다음과 같습니다.

- id: UA-141624268-1
- l: dataLayer
- cx: c",
https://cr.acecounter.com/Web/AceCounter_AW.js?gc=AS2A40235064849&py=0&gd=gtc10&gp=8080&up=NaPm_Ncisy&rd=1715247369554,죄송합니다. 제가 이해할 수 있는 스크립트 형식이 아닙니다. 다른 방식으로 도와드릴 수 있는 게 있을까요?,
https://apis.google.com/_/scs/abc-static/_/js/k=gapi.lb.ko.6ZQ8AlREbLQ.O/m=auth2/exm=client/rt=j/sv=1/d=1/ed=1/am=AAAC/rs=AHpOoo-uT8UWZkuyvO-2tk4dsnxqczIcdA/cb=gapi.loaded_1?le=scs,"이 링크는 구글 API의 일부분으로, gapi.loaded_1 콜백 함수를 통해 로드된 스크립트를 해석하는 것으로 보입니다. 스크립트에서 추출된 값은 다음과 같습니다:

- k: gapi.lb.ko.6ZQ8AlREbLQ.O
- m: auth2
- exm: client
- rt: j
- sv: 1
- d: 1
- ed: 1
- am: AAAC
- rs: AHpOoo-uT8UWZkuyvO-2tk4dsnxqczIcdA
- cb: gapi.loaded_1

해석된 결과는 구글 API의 클라이언트 측 권한 및 로드된 스크립트와 관련된 정보를 포함하고 있는 것으로 보입니다.",
https://apis.google.com/_/scs/abc-static/_/js/k=gapi.lb.ko.6ZQ8AlREbLQ.O/m=client/rt=j/sv=1/d=1/ed=1/am=AAAC/rs=AHpOoo-uT8UWZkuyvO-2tk4dsnxqczIcdA/cb=gapi.loaded_0?le=scs,죄송합니다. 제가 이해할 수 있는 형식의 스크립트가 필요합니다. 스크립트를 제공해 주시겠어요?,
https://assets.datarize.ai/logger/genesis.10026.min.js,"죄송합니다. 데이터라이즈의 스크립트를 해석하기 위해서는 해당 스크립트의 내용이 필요합니다. 스크립트의 내용을 제공해주시면, 제가 그 내용을 해석하여 결과를 제공해드릴 수 있습니다.",
https://connect.facebook.net/signals/config/1713952925541545?v=2.9.156&r=stable&domain=attrangs.co.kr&hme=c3a545c63044e8e9102d4f32d84a1137594d024f28e801d670bc76dc5c075575&ex_m=67%2C112%2C99%2C103%2C58%2C3%2C93%2C66%2C15%2C91%2C84%2C49%2C51%2C158%2C161%2C172%2C168%2C169%2C171%2C28%2C94%2C50%2C73%2C170%2C153%2C156%2C165%2C166%2C173%2C121%2C14%2C48%2C178%2C177%2C123%2C17%2C33%2C38%2C1%2C41%2C62%2C63%2C64%2C68%2C88%2C16%2C13%2C90%2C87%2C86%2C100%2C102%2C37%2C101%2C29%2C25%2C154%2C157%2C130%2C27%2C10%2C11%2C12%2C5%2C6%2C24%2C21%2C22%2C54%2C59%2C61%2C71%2C95%2C26%2C72%2C8%2C7%2C76%2C46%2C20%2C97%2C96%2C9%2C19%2C18%2C81%2C53%2C79%2C32%2C70%2C0%2C89%2C31%2C78%2C83%2C45%2C44%2C82%2C36%2C4%2C85%2C77%2C42%2C39%2C34%2C80%2C2%2C35%2C60%2C40%2C98%2C43%2C75%2C65%2C104%2C57%2C56%2C30%2C92%2C55%2C52%2C47%2C74%2C69%2C23%2C105,죄송합니다. 그것은 스크립트가 아닙니다. 페이지 URL을 제공해 주시면 페이지 내의 스크립트를 해석할 수 있습니다.,
https://connect.facebook.net/en_US/fbevents.js,이 스크립트는 Facebook의 페이스북 이벤트를 추적하기 위한 스크립트입니다. 해당 스크립트는 페이지의 방문자들의 행동을 추적하고 분석하기 위해 사용됩니다.,
https://static.attrangs.co.kr/asset/js/jquery-1.11.3.min.js?a=20221239,"죄송합니다. 주어진 URL에서는 스크립트가 직접 제공되지 않습니다. 스크립트를 직접 입력해주시거나, 스크립트를 제공하는 다른 URL을 입력해주시면 해당 스크립트를 해석하여 값을 추출해드릴 수 있습니다.",
https://static.attrangs.co.kr/asset/js/jquery-ui.js,"제가 제공하는 정보로는 해당 링크의 스크립트를 직접 해석할 수는 없습니다. 스크립트의 내용을 제가 읽고 해석하기 위해서는 스크립트의 내용을 제공해주셔야 합니다. 스크립트의 내용을 알고 계신다면, 그 내용을 제공해주시면 해당 스크립트가 어떤 역할을 하는지 한글로 설명해 드릴 수 있습니다.",
https://static.attrangs.co.kr/asset/js/jquery.form.min.js?a=20221239,죄송합니다. 제가 이해하는대로는 스크립트를 해석하는 데 도움을 드릴 수 없습니다. 다른 도움이 필요하시면 무엇이든 물어보세요!,
https://static.attrangs.co.kr/asset/js/clipboard.js?a=20221239,죄송합니다. 그 링크는 스크립트 파일이 아니라 외부 자바스크립트 파일로 보입니다. 스크립트를 해석하려면 직접 내용을 제공해주셔야 합니다. 가능하시다면 스크립트 내용을 제공해주시겠어요?,
https://static.attrangs.co.kr/asset/js/freezeframe.min.js?a=20221239,죄송합니다. 제가 이 스크립트를 해석하려면 스크립트 내용이 필요합니다. 스크립트를 제공해주시겠어요?,
https://static.attrangs.co.kr/asset/js/swiper.min.js?a=20221239,죄송합니다. 그 스크립트를 해석하려면 스크립트 내용이 필요합니다. 스크립트를 제공해주시겠습니까?,
https://static.attrangs.co.kr/asset/js/slick.min.js?a=20221239,"죄송합니다. 제가 이해하는 바로는 당신이 제공한 URL은 JavaScript 파일인데, 이를 해석하여 값을 추출할 수는 없습니다. 스크립트 인터프리터는 주로 프로그래밍 언어나 특정 형식의 스크립트에 대해 값을 추출하는 데 사용됩니다. 만약 다른 종류의 스크립트나 문서를 해석하고 싶으시다면, 해당 스크립트나 문서를 제공해주시면 도와드릴 수 있을 것입니다.",
https://static.attrangs.co.kr/asset/js/ion.rangeSlider.js?a=20221239,죄송합니다. 제가 이해할 수 있는 것은 텍스트 기반의 스크립트입니다. 제가 도와드릴 수 있는 다른 것이 있나요?,
https://static.attrangs.co.kr/asset/js/jquery.countdown.min.js?a=20221239,죄송합니다. 주어진 정보만으로는 스크립트를 해석하거나 결과를 파악할 수 없습니다. 스크립트를 제공해주시면 해당 스크립트를 해석하여 결과를 제공해드릴 수 있습니다.,
https://static.attrangs.co.kr/class/cookie.js?a=20221239,죄송합니다. 요청하신 URL에서 스크립트를 해석할 수 없습니다. 다른 내용으로 도움을 드릴 수 있나요?,
https://static.attrangs.co.kr/asset/js/script.js?a=20221241,"죄송합니다. 제가 직접적인 링크의 내용을 해석하는 데 도와드릴 수는 없습니다. 그러나 제가 도와드릴 수 있는 것은 해당 링크가 JavaScript 파일을 가지고 있고, 그 파일 안에는 스크립트가 포함되어 있을 것이라는 것입니다. 스크립트를 제가 해석해드릴 수 있다면, 스크립트가 하는 역할을 알려드릴게요.",
https://static.attrangs.co.kr/asset/js/custom.js?a=20221239,죄송합니다. 해당 링크는 저희 시스템에서 지원하지 않는 형식의 파일입니다. 다른 도움이 필요하시면 무엇이든 물어주세요!,
https://static.attrangs.co.kr/class/goods.js?a=20221239,죄송합니다. 해당 URL에 대한 정보가 없습니다. 다른 질문이 있으시면 도와드리겠습니다.,
https://static.attrangs.co.kr/class/buy.js?a=20221239,죄송합니다. 그 URL에 접근하여 스크립트를 읽고 해석해드릴 수 없습니다. 다른 질문이 있으시면 도와드리겠습니다.,
https://static.attrangs.co.kr/class/member.js?a=20221239,죄송합니다. 하지만 제가 직접적인 링크를 통한 파일 다운로드나 실행은 지원하지 않습니다. 대신 파일의 내용을 직접 복사하여 제공하시면 해당 파일을 해석하여 도와드릴 수 있습니다.,
https://static.attrangs.co.kr/class/order.js?a=20221239,죄송합니다. 링크를 통해 스크립트를 읽을 수 없습니다. 다른 정보를 제공해 주시겠어요?,
https://static.attrangs.co.kr/class/site.js?a=20221239,죄송합니다. 해당 URL은 보안상의 이유로 접근할 수 없습니다. 다른 내용으로 도움을 드릴까요?,
https://static.attrangs.co.kr/class/giftCard.js?a=20221239,죄송합니다. 요청하신 URL에 접근하여 스크립트를 분석할 수 없습니다. 다른 정보나 도움이 필요하시면 무엇이든 물어보세요!,
https://static.attrangs.co.kr/class/scm.js?v=20221239,"죄송합니다. 저는 현재 외부 링크에 접근하여 스크립트를 해석하거나 실행하는 기능을 제공할 수 없습니다. 하지만 해당 링크에서 스크립트를 복사하여 여기에 붙여넣으면, 해당 스크립트를 해석하고 결과를 한글로 번역해 드릴 수 있습니다. 부탁드립니다.",
https://static.attrangs.co.kr/asset/js/review.js?a=20221239,죄송합니다. 그 링크는 저의 기능 범위를 벗어나는 것 같습니다. 더 도와드릴 일이 있나요?,
"	// !function(h,e,a,r,i,n,c){c=function(){};i=e.createElement(a);i.async=!0;i.src=r;i.onload=c;n=e.getElementsByTagName(a)[0];n.parentNode.insertBefore(i,n);if(h.hearinaJs){c();return;}}(window,document,'script','//cdn.hearina.com/js/luna_hearina_v.0.4.js');	",해당 스크립트는 'hearina'라는 외부 자바스크립트 라이브러리를 로드하는 역할을 합니다.,
"var hdscling = false;window.addEventListener('scroll',function(){    if(hdscling){        return false;    }    hdscling = true;    setTimeout(function(){        let hd = document.querySelector('#header-2308');        if( window.scrollY > 0 ){            hd.classList.add('top0over');        }else{            hd.classList.remove('top0over');        }        hdscling = false;    },100);})","```word
hdscling: false
scroll: function, setTimeout, querySelector, add, remove
window: scrollY
document: querySelector
```",
https://googleads.g.doubleclick.net/pagead/viewthroughconversion/762882782/?random=1715247369609&cv=11&fst=1715247369609&bg=ffffff&guid=ON&async=1&gtm=45be4510v899953404za200&gcd=13l3l3l3l1&dma=0&u_w=2560&u_h=1440&url=https%3A%2F%2Fattrangs.co.kr%2F&hn=www.googleadservices.com&frm=0&tiba=20%EB%8C%80%2C%2030%EB%8C%80%20%EC%97%AC%EC%84%B1%20%EB%8C%80%ED%91%9C%EC%87%BC%ED%95%91%EB%AA%B0%20%EC%95%84%EB%9C%A8%EB%9E%91%EC%8A%A4&npa=0&pscdl=noapi&auid=2021170897.1715247370&uaa=&uab=&uafvl=&uamb=0&uam=&uap=Windows&uapv=&uaw=0&fdr=QA&data=event%3Dgtag.config&rfmt=3&fmt=4,"해당 스크립트는 구글 애드워즈의 컨버전션 추적 스크립트입니다. 스크립트에서 추출된 값들은 다음과 같습니다.

- cv: 11
- u_w: 2560
- u_h: 1440
- url: https://attrangs.co.kr/
- tiba: 20대, 30대 여성 대표쇼핑몰 아름랑스
- uap: Windows

이 스크립트는 구글 애드워즈를 통해 특정 웹페이지에 대한 광고 클릭 후의 컨버전션을 추적하는 데 사용됩니다.",
https://www.googleadservices.com/pagead/conversion/762882782/?random=1715247369618&cv=11&fst=1715247369618&bg=ffffff&guid=ON&async=1&gtm=45be4510v899953404za200&gcd=13l3l3l3l1&dma=0&u_w=2560&u_h=1440&url=https%3A%2F%2Fattrangs.co.kr%2F&label=ZqNaCIz1he8DEN7V4usC&hn=www.googleadservices.com&frm=0&tiba=20%EB%8C%80%2C%2030%EB%8C%80%20%EC%97%AC%EC%84%B1%20%EB%8C%80%ED%91%9C%EC%87%BC%ED%95%91%EB%AA%B0%20%EC%95%84%EB%9C%A8%EB%9E%91%EC%8A%A4&npa=0&pscdl=noapi&auid=2021170897.1715247370&uaa=&uab=&uafvl=&uamb=0&uam=&uap=Windows&uapv=&uaw=0&ec_m=%23footer-r%3E%3Anth-child(1)%3E%3Anth-child(2)%3E%3Anth-child(2)%3E%3Anth-child(7)*P%3Atrue%3A18%3Afalse*1~%23footer-r%3E%3Anth-child(1)%3E%3Anth-child(2)%3E%3Anth-child(2)%3E%3Anth-child(8)%3E%3Anth-child(1)*SPAN%3Atrue%3A18%3Afalse*1&ec_sel=%23footer-r%3E%3Anth-child(1)%3E%3Anth-child(2)%3E%3Anth-child(2)%3E%3Anth-child(7)&ec_meta=P%3Atrue%3A18%3Afalse&ec_lat=1&ec_s=1&fdr=QA&data=event%3Dconversion&rfmt=3&fmt=4,죄송합니다. 제가 이해할 수 있는 형식의 스크립트가 아닙니다. 다른 형식의 스크립트를 제공해주시겠어요?,
"$(function(){    autoLogin();});function autoLogin(){    var memindex = """";    var autoLogin = """";    if( memindex == '' && autoLogin == '1' ){        $.ajax({            url:'/member/auto_loginpro.php',            type:'post',            async:false,            success:function(data){                console.log(data);                if( data ){                    alert(data);                }else{                    location.replace('/');                }            }        });    }}$(window).scroll(function(){	var scl = $(document).scrollTop();	if(scl > 100){		$("".quick_delivery , .btn_quick, #today_timediv"").css({'opacity':'1','z-index':'10001'});	}else if( !$('.rightPanelClose').hasClass('on') ){		$("".quick_delivery , .btn_quick, #today_timediv"").css({'opacity':'0','z-index':'20'});	}});$(""a[data-clickMap='main-장바구니버튼']"").closest('.fixno').find('.cnt').text('');$(document).on('mouseover',"".colorCode"",function(){    var obj = $(event.target||event.srcElement);    var li = obj.closest('li');    var img = li.find("".prdimg a img"");    var op1name = li.find("".op1name"");    var orisrc = li.find("".prdimg a img"").data(""oriimg"");    if(orisrc && obj.data(""colorsrc"")){        // op1name.text(obj.data(""colorname""))        img.attr(""src"",obj.data(""colorsrc""));    }})$(document).on('mouseleave',"".colorCodebox"",function(){    var obj = $(event.target||event.srcElement);    var li = obj.closest('li');    var img = li.find("".prdimg a img"");    var op1name = li.find("".op1name"");    op1name.text('')    var orisrc = li.find("".prdimg a img"").data(""oriimg"");    img.attr(""src"",orisrc);})function delrecent(e){	if(!confirm(""검색어 ""+e+""를 삭제 하시겠습니까?""))return;	var obj = $(event.target||event.srcElement);	$.ajax({        url:'/ajax_proc/etc.php',		type:'post',		async:false,		data:{""mode"":""delrecent"",""delkeyword"":e},		success:function(code){			if(code) eval(code);			obj.closest(""li"").remove();		}	});}","해당 스크립트는 자동 로그인 기능과 스크롤 이벤트 처리, 장바구니 상품 색상 변경, 최근 검색어 삭제 등의 기능을 수행하는 것으로 보입니다.",
https://t1.daumcdn.net/adfit/static/kp.js,죄송합니다. 해당 URL은 스크립트 파일이 아니기 때문에 스크립트를 해석할 수 없습니다. 스크립트 파일을 제공해주시면 해당 스크립트를 해석하여 결과를 제공해 드릴 수 있습니다.,
kakaoPixel('2283572836541156558').pageView();,이 스크립트는 kakaoPixel을 통해 '2283572836541156558'이라는 페이지 뷰 이벤트를 추적하는 것으로 보입니다. KakaoPixel은 카카오 픽셀을 사용하여 웹사이트의 방문자를 추적하고 분석하는 데 사용됩니다.,
https://www.googletagmanager.com/gtag/js?id=AW-762882782,"해당 스크립트는 Google의 광고 추적 및 분석을 위한 태그 매니저 스크립트입니다. ""AW-762882782""는 Google 광고 계정 ID로, 해당 ID를 사용하여 광고 캠페인을 추적하고 분석하는 데 사용됩니다.",
"window.dataLayer = window.dataLayer || [];function gtag(){dataLayer.push(arguments);}gtag('js', new Date());gtag('config', 'AW-762882782');gtag('config', 'UA-141624268-1');","해당 스크립트는 구글 애널리틱스 추적 코드를 설정하는 역할을 합니다. 'AW-762882782' 및 'UA-141624268-1'은 추적 ID로, 웹사이트의 방문자 및 행동을 추적하는 데 사용됩니다.",
"!function(f,b,e,v,n,t,s){if(f.fbq)return;n=f.fbq=function(){n.callMethod?n.callMethod.apply(n,arguments):n.queue.push(arguments)};if(!f._fbq)f._fbq=n;n.push=n;n.loaded=!0;n.version='2.0';n.queue=[];t=b.createElement(e);t.async=!0;t.src=v;s=b.getElementsByTagName(e)[0];s.parentNode.insertBefore(t,s)}(window, document,'script','https://connect.facebook.net/en_US/fbevents.js');fbq('set','autoConfig',false,'1713952925541545');fbq('init', '1713952925541545');fbq('track', 'PageView');","해당 스크립트는 페이스북 픽셀의 초기화와 페이지 추적을 위한 것으로 보입니다.

- 'set' : 'autoConfig', 'false', '1713952925541545'
- 'init' : '1713952925541545'
- 'track' : 'PageView'",
"(function(d,s,i) {    var se = d.createElement(s);se.type='text/x-javascript';se.async=true;se.src='//assets.datarize.ai/logger/genesis.'+i+'.min.js';    var x = d.getElementsByTagName(s)[0];x.parentNode.insertBefore(se,x);})(document, 'script', '10026');","해석 결과:
```
문서: document
스크립트: script
아이디: 10026
```
해석된 결과를 보면, 이 스크립트는 문서에 스크립트를 삽입하고, 아이디가 10026인 자바스크립트 파일을 로드하는 역할을 합니다.",
"    // var wish_list = new Swiper('.wish-list-folders', {    //     slidesPerView: 4.3,    //     spaceBetween: 7,    //     observer: true,    //     observeParents: true,    // });    function wish_folder() {        this.init = function() {            this.selectedImg = ''; //찜할당시 찜한상품의 이미지 상품정보 idx,이미지경로            this.goods_idx = []; //찜할당시 선택한 상품            this.selectFolder = ''; //현재 선택된 폴더            this.firstpopup = $('.wish-select-folder-popup'); //첫 녹색팝업            this.wishfolderWrap = $('.wish-folder-wrap'); //폴더추가 전체랩            this.wishlistWrap = $('.wish-list-wrap'); //폴더리스트,찜리스트 랩            this.wishsettingWrap = $('.wish-setting-wrap'); //폴더편집 랩            this.wishaddfolder = $('.wish-add-folder'); //폴더추가 팝업            this.selectli = $('#OPEN-FOLDER-HTML').html(); //폴더선택 li html            this.slideli = $('#FOLDER-SWIPER-LI').html(); //찜한 상품 폴더목록 슬라이드 html            this.wishListli = $('#WISH-LIST-LI').html(); //찜한상품 상품목록 html            this.settingfolderlist = $('#WISH-LIST-SETTING-LI').html(); //폴더편집내 폴더목록 html            this.selectFolder_complete = $('.wish-select-folder-popup-select');            this.scrollTop = 0;            this.wishAddCartWrap = $('#wish-add-cart-wrap'); //장바구니담기 랩            this.wishAddCarthtml = $('#WISH_CART').html(); //장바구니 상품 html            this.sort = sessionStorage.getItem('orby') ? sessionStorage.getItem('orby') : 99; //리스트 정렬기준            this.sdata = """"; // 상품시즌            var obj = this;            var firstpopup = obj.firstpopup;            var wishfolderWrap = obj.wishfolderWrap;            var wishlistWrap = obj.wishlistWrap;            var wishsettingWrap = obj.wishsettingWrap;            var wishaddfolder = obj.wishaddfolder;            $(function(){                if(wishlistWrap.css(""display"") == ""block""){                    // $('.fixed-bar').show();                }            })            //좋아요시 팝업출력            $(document).on('click', '.wishcart span.wish', function() {                if ($(this).hasClass('on') && firstpopup.css('display') == 'none' ) {                    firstpopup.fadeIn();                    obj.selectedImg = $(this).closest('.goods-form-list').find('.prdimg img').attr('src');                    obj.goods_idx.push($(this).attr('onclick').match(/^.*\(\'?\""?(.*)\'?\""?\).*?;/)[1]);                    setTimeout(function() {                        firstpopup.fadeOut();                    }, 3500);                }            })            //미선택 테두리제거            $(document).on('change', 'select.unselected', function() {                $(this).removeClass('unselected');            })            //장바구니닫기            $(document).on('click','#wish-add-cart-wrap',function(e){                var t = $(e.target).attr('id');                if(t == 'wish-add-cart-wrap'){                    wish_folder.wishListAddCartClose();                }            });            //폴더창 외부클릭 폴더창 닫기            wishfolderWrap.click(function(e) {                var outcheck = $(e.target).hasClass('wish-folder-wrap');                if (outcheck) {                    obj.closewindow();                    obj.wishListModdify();                    obj.folderAddCancel();                }            })            wishaddfolder.find('input[name=folder_name]').on('input propertychange', function() {                if (this.value.length > 0) {                    wishaddfolder.find('.okbtn').addClass('on');                } else {                    wishaddfolder.find('.okbtn').removeClass('on');                }            })            //폴더설정 닫기            wishsettingWrap.click(function() {                var obj = $(event.target);                if(obj.closest("".wish-setting-content"").length < 1 || obj == $("".setting-clsbtn"")) {                    wish_folder.folderAddCancel()                    wishsettingWrap.hide();                }                return false;            });        }        this.selectAllWishList = function() {            var t = $(event.target).closest('.selectall');            var state = t.find('.wish-select-all');            var wl = this.wishlistWrap.find('.wish-list-goodslist-ul li');            state.toggleClass('on');            if (state.hasClass('on')) {                wl.find("".prdcheckbox"").addClass('wish_checked');            } else {                wl.find("".prdcheckbox"").removeClass('wish_checked');                $('.goods-form-list .opt_layer').each(function(){                    if( $(this).css('display') == 'none' ){                        return true;                    }                    $(this).closest('.goods-form-list').find('.wish-cart-open').click();                })            }            var len = document.querySelectorAll('.wish_checked').length;            document.querySelector('#wishChkCnt').innerText = len;        }        this.sdataChange = function(){            var t = $(event.target);            this.sdata = t.val();            this.WishlistFolderSelect();        }        this.sortChange = function() {            var t = $(event.target);            this.sort = t.val();            this.WishlistFolderSelect();            sessionStorage.setItem('orby',t.val());        }        this.wishMoveCart = function() {            //모바일            // var rt = GoodsProc.codi_set_cart();            // rt.then((value) => {            //     if (value === undefined) {            //         this.wishListAddCartClose();            //         this.wishListModdify()            //     } else {            //         //실패시 선택안한옵션 테두리적용            //         this.wishAddCartWrap.find('select[name^=op]').each(function() {            //             if ($(this).val() == '') {            //                 $(this).addClass('unselected');            //             }            //         });            //     }            // });            //피씨            var status = true;            var objarr = [];            if( $('.wish_checked').length == 0 ){                alert('상품을 선택해주세요');                return;            }            $('.wish_checked').each(function(){                var obj = $(this).closest('.goods-form-list').find('.opt_layer');                if(obj.css('display') == 'none'){                    obj.closest('.box').find('.wish-cart-open').click();                }                var op1 = obj.find('select[name=op1] option:selected');                var op2 = obj.find('select[name=op2] option:selected');                if( !op1.val() ){                    objarr.push(op1);                    status = false;                }                if( !op2.val() ){                    objarr.push(op2);                    status = false;                }            })            if(!status){                for( var i in objarr){                    objarr[i].parent().addClass('unselected');                }                var sc = $('.unselected').closest('.opt_layer').offset().top;                if(sc){                    $(window).scrollTop(sc-600);                }                alert('상품을 선택해주세요');                $("".unselected"").closest('.goods-form-list').find('.opt_layer').show();                return false;            }            var string = [];            $('.wish_checked').each(function(){                var tmp = [];                var t = $(this).closest('.goods-form-list');                var goods_idx = $(this).data('idx');                var op1 = t.find('[name=""op1""]').val();                var op2 = t.find('[name=""op2""]').val();                var ea = t.find('[name=""ea""]').val();                if( !ea ){                    ea = 1;                }                if( !goods_idx ){                    return true;                }                tmp.push( goods_idx );                if( op1 ){                    tmp.push(op1);                }                if( op2 ){                    tmp.push(op2);                }                tmp = tmp.join('_')+'/'+ea;                string.push(tmp);                t.find('.wish-cart-open').click();            });            GoodsProc.ajax('set_cart',string);            if( confirm(""장바구니에 담았습니다.\n\n장바구니로 이동하시겠습니까?"")){                location.href = '/member/cart.php';            }        }        this.wishListAddCart = function() {            var data = {                'method': 'getGoodsOption',                'goods_idx': []            };            // this.wishlistWrap.find('.wish_checked').each(function() {            $('.wish_checked').each(function() {                if($(this).data('idx')){                    data.goods_idx.push($(this).data('idx'));                }            });            if (data.goods_idx.length == 0) {                alert('상품을 선택해주세요');                return;            }            var returndata = JSON.parse(this.ajax(data));            if (returndata.length == 0) {                alert('비정상 접근입니다');                return;            }            this.scrollTop = $(window).scrollTop();            $('html,body').addClass('scrollOff');            this.wishAddCartWrap.show();            var cartwrap = this.wishAddCartWrap.find('.cart-goods-list-wrap');            var carthtml = this.wishAddCarthtml;            $.each(returndata, function(i, v) {                cartwrap.append(carthtml);                var added = cartwrap.find('.cart-goods-list').last();                added.find('.img img').attr('src', v.img);                added.find('.gname').text(v.gname);                added.find('.price .num').text(v.faccount);                added.find('.price percent').remove().append(v.discountPer);                added.find('input[name=goods_idx]').val(v.index_no);                added.find('select').remove();                added.addClass('goods-codi-form');                if (v.useop1 == 'Y') {                    var op1 = '<select name=""op1"" onchange=""GoodsProc.codi_set_opt();"" data-goods_idx=""' + (v.index_no) + '"">';                    op1 += '<option value="""">옵션 1 ) 선택해주세요</option>';                    $.each(v.op1, function(o1, o1v) {                        op1 += '<option value=""' + (o1v.idx) + '"" data-opname=""' + (o1v.name) + '"" data-account=""' + (o1v.account) + '"" data-ispluslimit=""' + (o1v.isplus_limit) + '"">' + (o1v.name) + '</option>';                    });                    op1 += '</select>';                    added.find('.pop1').append(op1);                }                if (v.useop2 == 'Y') {                    var op2 = '<select name=""op2"" class=""op-select"" onchange=""GoodsProc.codi_set_opt();"" >';                    op2 += '<option value="""">색상 선택 후 선택</option>';                    op2 += '</select>';                    added.find('.pop2').append(op2);                }            })        }        this.wishListAddCartClose = function() {            $('html,body').removeClass('scrollOff');            $(window).scrollTop(this.scrollTop);            this.wishAddCartWrap.hide();            this.wishAddCartWrap.find('.cart-goods-list-wrap').empty();        }        this.updateFolderName = function() {            var t = $(event.target);            if (t.val().length == 0) {                alert('폴더명을 입력해주세요');                return false;            }            var idx = t.closest('li.wish-folders-item').data('idx');            var data = {                'method': 'updateFolderName',                'index_no': idx,                'name': t.val()            }            var returndata = this.ajax(data);        }        this.wishListMove = function() {            //선택한상품 폴더변경            this.goods_idx = [];            var obj = this;            this.wishlistWrap.find('.wish_checked').each(function() {                obj.goods_idx.push($(this).data('idx'));            });            if (this.goods_idx.length == 0) {                alert('상품을 선택해주세요');                return;            } else {                this.showFolderList();                this.wishListModdify(1);            }        }        this.wishListAction = function() {            //선택한상품 삭제,상단이동            if (!event) {                return false;            }            var t = $(event.target);            var method = t.attr('class');            var data = {                'method': method,                'goods_idx': [],            }            this.wishlistWrap.find('.wish_checked').each(function() {                data.goods_idx.push($(this).data('idx'));            })            if (data.goods_idx.length == 0) {                alert('상품을 선택해주세요');                return;            } else {                var returndata = this.ajax(data);                this.WishListadd(this.selectFolder);                this.wishListModdify(1);            }        }        this.wishListcheck = function() {            //찜상품 삭제,이동,정렬 상품클릭            var t = $(event.target).closest('.prdcheckbox');            t.toggleClass('wish_checked');            if(!t.hasClass('wish_checked')){                this.wishlistWrap.find('.selectall .wish-select-all').removeClass('on');            }            if( t.closest('.goods-form-list').find('.opt_layer').css('display') != 'none' && !t.hasClass('wish_checked')){                t.closest('.goods-form-list').find('.wish-cart-open').click();            }            var len = document.querySelectorAll('.wish_checked').length;            document.querySelector('#wishChkCnt').innerText = len;        }        this.wishListModdify = function(close) {            //찜상품 삭제,이동,정렬변경 버튼 팝업열기            // this.wishlistWrap.find('.prdcheckbox').toggle();            // if (this.wishlistWrap.find('.prdcheckbox').eq(0).css('display') == 'block' && !close) {            //     this.wishlistWrap.find('.wish-list-movingbtn').show();            //     this.wishlistWrap.find('.selectall').show();            //     this.wishlistWrap.find('.folder-move-btn').hide();            // } else {            //     this.wishlistWrap.find('.wish-list-movingbtn').hide();            //     this.wishlistWrap.find('.prdcheckbox').removeClass('wish_checked');            //     this.wishlistWrap.find('.selectall').hide().find('.wish-select-all').removeClass('on');            //     this.wishlistWrap.find('.selectall').find('.wish-select-all').removeClass('on');            //     this.wishlistWrap.find('.prdcheckbox').hide();            //     this.wishlistWrap.find('.folder-move-btn').show();            // }        }        this.closefolderSetting = function() {            // this.folderListaddli();            this.wishsettingWrap.hide();        }        this.closewindow = function() {            $('html,body').removeClass('scrollOff');            $(window).scrollTop(this.scrollTop);            this.wishfolderWrap.hide();        }        this.folderSetting = function() {            //찜한상품내 폴더세팅버튼            this.wishsettingWrap.show();            //WISH-LIST-SETTING-LI            var data = {                'method': 'folderSetting'            }            var ul = this.wishsettingWrap.find('.wish-folders-wrap ul');            var li = this.settingfolderlist;            var returndata = JSON.parse(this.ajax(data));            ul.empty().append(li);            ul.find('li .delbtn').text('');            ul.find('li .item-box').val('기본 폴더').prop('readonly', true);            ul.find('li .movebtn').text('');            $.each(returndata, function(i, v) {                ul.append(li);                var added = ul.children().last();                added.find('.item-box').val(v.name);                added.data('idx', v.index_no);            })            var obj = this;            ul.sortable({                handle: "".movebtn"",                axis: ""y"",                items: ""li:gt(0)"",                start: function(evt, ui) {},                stop: function(evt, ui) {                    // console.log(ui.item.data('idx'));                    //폴더정렬업데이트                    obj.folderSetsort();                }            });        }        this.folderSetsort = function() {            //드래그드롭으로 폴더정렬            var ul = this.wishsettingWrap.find('.wish-folders-wrap ul');            var data = {                'method': 'folderSetsort',                'sortdata': []            };            $.each(ul.children('li'), function(i, v) {                var folder_idx = $(v).data('idx');                if (folder_idx) {                    data.sortdata.push(folder_idx);                }            })            var returndata = this.ajax(data);            //정렬후 리스트초기화            this.folderListaddli()        }        this.folderAdd = function() {            //폴더선택 상단 폴더추가            $('.wish-setting-content').hide();            $('.wish-select-folder').hide();            if (this.selectedImg) {                this.wishaddfolder.find('.folder-img').attr('src', this.selectedImg);            } else {                this.wishaddfolder.find('.folder-img').attr('src', 'https://atimg.sonyunara.com/2021/renewal/wish_common/cartdefault2.png');            }            this.wishaddfolder.show();            this.wishsettingWrap.addClass('on');            this.wishfolderWrap.find('.wish-select-folder').addClass('on');        }        this.ajax = function(dataobj) {            var returnData = '';            $.ajax({                url: '/_wish_folder.php',                data: dataobj,                type: 'post',                async: false,                success: function(v) {                    returnData = v;                }            })            return returnData;        }        this.showDeliveryType = function(type) {            var t = $(event.target).closest('.' + type);            t.toggleClass('on');            t.find('img').toggle();            var nowstat = t.hasClass('on');            var typelist = [];            t.closest('.delivery-btnul-wish').find('li.on').each(function() {                typelist.push($(this).data('type'));            })            this.wishlistWrap.find('.wish-list-goodslist-ul > li').show();            for (i in typelist) {                this.wishlistWrap.find('.wish-list-goodslist-ul > li').each(function() {                    if ($(this).data(typelist[i]) != 'Y') {                        $(this).hide();                    }                })            }            document.querySelectorAll('.wish_checked').forEach(e=>{                e.classList.remove('wish_checked');            })            var len = document.querySelectorAll('.wish_checked').length;            document.querySelector('#wishChkCnt').innerText = len;            return;        }        this.folderListaddli = function() {            //폴더목록 비동기 li넣어주는함수            var data = {                'method': 'folderSetting'            }            var returndata = JSON.parse(this.ajax(data));            var update_section = {                0: { //찜한목록 폴더리스트                    ul: this.wishlistWrap.find('.wish-list-folders > ul'),                    li: this.slideli                },                1: { //선택폴더 폴더리스트                    ul: this.wishfolderWrap.find('.wish-folder-list'),                    li: this.selectli                }            };            //폴더리스트 업데이트            $('.folderul').slick('slickRemove',null,null,true);            $.each(update_section, function(num, parent) {                var ul = parent.ul;                var li = parent.li;                // ul.empty().append(li);                if(num == 0){                    ul.slick('slickAdd',li); //찜한목록 폴더리스트만 슬릭                }else{                    ul.empty().append(li);                }                $.each(returndata, function(i, v) {                    if(num == 0){                        ul.slick('slickAdd',li);                    }else{                        ul.append(li);                    }                    var added = ul.find('li').last();                    added.data('idx', v.index_no).find('p.name').text(v.name);                    if (v.img) {                        added.find('.img img').attr('src', v.img);                    }                });                if(num == 0){                    ul.slick('slickAdd',li); //찜한목록 폴더리스트만 슬릭                    var added = ul.find('li').last();                    added.data('idx', 'folder-setting').find('p.name').text('폴더수정');                    added.attr('onclick','wish_folder.folderSetting()');                    added.find('.img img').attr('src','https://atimg.sonyunara.com/2021/renewal/wish_common/foldersettingbtn.png').css('border-radius','0');                    $('.folderul').slick('setPosition');                }else{                    ul.append(li);                    var added = ul.find('li').last();                    added.data('idx', 'folder-add').find('p.name').text('폴더추가');                    added.find('.img img').attr('src','https://atimg.sonyunara.com/2021/renewal/wish_common/folderaddbtn.png');                    added.attr('onclick','wish_folder.folderAdd()');                }            })            //슬라이드 업데이트            // wish_list.update();            //업데이트된폴더 on 클래스추가            this.folderSelectaddClass(this.selectFolder);        }        this.folderSelectaddClass = function(idx) {            //선택된폴더 on 클래스            var selectedli = this.wishlistWrap.find('.wish-list-folders > ul').find('li');            selectedli.removeClass('on');            $.each(selectedli, function(i, v) {                if ($(this).data('idx') == idx) {                    $(this).addClass('on');                    // wish_list.slideTo(i);                }            })        }        this.WishListadd = function(idx) {            //찜한상품 목록내 상품목록 비동기 li추가            this.wishlistWrap.find("".thico"").removeClass('on');            var data = {                'method': 'WishListadd',                'folder_idx': idx,                'sdata':this.sdata,                'orby': this.sort            }            var returndata = this.ajax(data);            var ul = this.wishlistWrap.find('.wish-list-goodslist-ul');            ul.empty();            ul.append(returndata);            this.folderSelectaddClass(idx);        }        this.folderSelect = function() {            //찜한상품 팝업(폴더목록 in 상품목록)            var t = $(event.target).closest('.open-folder');            var folder_idx = t.data('idx');            this.selectFolder = folder_idx;            if (this.goods_idx.length > 0) {                //찜한다음 폴더선택시 해당폴더로 업데이트                this.folderIdx_update(folder_idx, this.goods_idx);            }            this.folderListaddli();            this.closewindow(); //폴더세팅보여주기에서 창닫기로변경            this.WishlistFolderSelect();            return;            this.WishListadd(folder_idx);            this.wishlistWrap.show();        }        this.folderIdx_update = function(folder_idx, goods_idx) {            //찜한상품 선택한 폴더 밑으로 수정 goods_idx 배열로받음            if( goods_idx.length == 0 ){                return;            }            var data = {                'method': 'folderIdx_update',                'folder_idx': folder_idx,                'goods_idx': goods_idx            }            var update = this.ajax(data);            this.goods_idx = []; //찜한상품 폴더지정했으니 초기화            this.selectedImg = ''; //폴더이미지 업로드했으니 초기화            var complete_html = this.selectFolder_complete;            complete_html.find('span').text(update);            complete_html.fadeIn();            var obj  = this;            setTimeout(function(){                complete_html.fadeOut();            },2000)        }        this.showFolderList = function() {            this.scrollTop = $(window).scrollTop();            $('html,body').addClass('scrollOff');            //팝업 폴더선택하기 클릭 폴더리스트 표시            this.wishfolderWrap.show();            this.firstpopup.hide();            this.folderListaddli();        }        this.WishlistFolderSelect = function() {            //찜한상품 목록내 폴더선택            var t = $(event.target).closest('.folderli');            if (t[0]) {                this.selectFolder = t.data('idx');            }            this.WishListadd(this.selectFolder);            this.wishListModdify(1);            //오늘출발 무료배송 초기화            this.wishlistWrap.find('.delivery-type-btn li').each(function() {                $(this).removeClass('on');                $(this).find('img').eq(0).show();                $(this).find('img').eq(1).hide();            })        }        this.delFolder = function() {            if (!confirm('폴더를 삭제하시겠습니까?')) {                return false;            }            var t = $(event.target).closest('.wish-folders-item');            var data = {                'method': 'delFolder',                'folder_idx': t.data('idx'),            }            var returndata = this.ajax(data);            t.remove();            this.folderListaddli();        }        this.addFolder = function() {            //폴더리스트->폴더추가            var t = $(event.target);            if (!t.hasClass('on')) {                alert('폴더명을 입력해주세요');                t.focus();                return false;            }            var input = this.wishaddfolder.find('input[name=folder_name]');            var data = {                'method': 'addFolder',                'name': input.val(),                'img': this.selectedImg,            };            var folder_idx = Number(this.ajax(data));            if (folder_idx) {                alert('폴더가 추가됐습니다');                $('.wish-setting-content').show();                input.val('');                this.folderIdx_update(folder_idx, this.goods_idx);                this.folderAddCancel(); //창닫기                if (this.wishlistWrap.find('.wish-setting-wrap').css('display') == 'block') {                    //폴더세팅 목록업데이트                    this.folderSetting();                }                //폴더목록 업데이트                this.folderListaddli();                return;            } else {                alert('이미 존재하는 이름입니다');                return;            }        }        this.folderAddCancel = function() {            //폴더추가 취소버튼            this.wishaddfolder.hide();            this.wishfolderWrap.find('.wish-select-folder').removeClass('on');            this.wishsettingWrap.removeClass('on');            $('.wish-setting-content').show();            $('.wish-select-folder').show();        }        this.closeWishlist = function() {            //찜한상품 목록 닫기            //this.wishlistWrap.hide();            history.back();        }        this.toggleCart = function(t){            var t = $(t);            t.parents('.box').find('.opt_layer').slideToggle(); t.toggleClass('on');            if(t.hasClass('on')){                t.text('옵션 닫기');            }else{                t.text('옵션 선택');            }        }    }    var wish_folder = new wish_folder();    wish_folder.init();","해당 스크립트는 웹 페이지에서 찜한 상품을 폴더별로 관리하고 장바구니에 담는 기능을 담당하는 스크립트입니다. 폴더 추가, 삭제, 폴더별 상품 관리, 장바구니에 상품 추가 등 다양한 기능을 수행합니다.",
"    function Lab() {        this.setWrap = $('.lab-set-pick-wrap');        this.guideWrap = $('.guide-pop-wrap');        this.menuhtml = $('#LAB-MENU-LIST').html();        this.pickmenuhtml = $('#LAB-PICK-MENU').html();        this.firstLoading = true;        this.currentType;        this.scrollTop = 0;        this.init = function() {            var obj = this;            $('.bgwrap').click(function(e) {                if ($(e.target).hasClass('bgwrap')) {                    obj.closePop();                }            })            // $(document).on('keyup', '.set-category-search input[name=searchPick]', function(e) {            //     if (e.keyCode == 13) {            //         $(this).blur();            //     }            //     obj.searchPick($(this).val());            // })            //this.showPop();        }        this.showPop = function() {            if (this.firstLoading) {                this.tabChange('category');            }            this.getUserData();            //$(""html , body"").css({            //    //'overflow-y': 'hidden',            //    'height':'100%'            //});            this.scrollTop = $(window).scrollTop();            // $('html,body').addClass('scrollOff');            $('#mypick-menu').hide();        }        this.closeWindow = function() {            if( window.location.href.indexOf('/member/lab.php') > 0 ){                history.back();                return;            }            $('#att-lab').hide();            //$(""html , body"").css({            //    'overflow-y': 'auto',            //});            $('html,body').removeClass('scrollOff');            $(window).scrollTop(this.scrollTop);        }        this.closePop = function() {            // this.setWrap.hide();            // this.guideWrap.hide();            //$('#att-lab').css({            //    'overflow-y': 'auto',            //});            $('body,html').removeClass('scrollOff');            $('#att-lab').hide();        }        this.pickMenuShow = function() {            if( $('.btn_qucik_wrap > .rightPanelClose').hasClass('on') ){                console.log(123)                $('.btn_qucik_wrap > .rightPanelClose').click();            }            var wrap = $('#mypick-menu');            var lihtml = $('#LAB-PICKED-LIST').html();            var data = {                'method': 'getUserData',                'orby': 'desc'            }            var returndata = JSON.parse(this.ajax(data));            var json = returndata.pickmenu;            wrap.find('ul.mypick-menu-icon li.picked').remove();            wrap.find('ul.mypick-menu-icon').prepend(lihtml);            wrap.find('ul.mypick-menu-icon li').addClass('addBtn');            wrap.find('ul.mypick-menu-icon li.picked a').attr('href', 'javascript:attLab.showPop();attLab.addPickMenu();');            if (json) {                for (i in json) {                    var j = json[i];                    wrap.find('ul.mypick-menu-icon').prepend(lihtml);                    var added = wrap.find('ul.mypick-menu-icon li.picked').first();                    added.find('img').attr('src', j.imgsrc+""?v=12"");                    added.find('a').attr('href', j.href);                    added.find('.picked-text a').text(j.name);                }                if(json.length >= 5){                    var modify =  wrap.find('ul.mypick-menu-icon li.picked').last();                    modify.find('.picked-text a').text('수정');                    modify.find('img').attr('src',  modify.find('img').attr('src').replace('add.png','edit.png') );                }            }            wrap.toggle();        }        // this.searchPick = function(v) {        //     if (v == '') {        //         $('.set-menu-list li').show();        //         return;        //     }        //     $('.set-menu-list li').each(function() {        //         if ($(this).text().indexOf(v) > 0) {        //             $(this).show();        //         } else {        //             $(this).hide();        //         }        //     })        // }        // this.searchOpen = function() {        //     this.currentType = $('.set-category li.on').data('type');        //     this.tabChange('category');        //     this.tabChange('brand');        //     this.tabChange('seleb');        //     this.tabChange('mypage');        //     this.tabChange('event');        //     this.tabChange('theme');        //     $('.set-menu-list').children('div').show();        //     $('.set-category-search').css('display', 'flex');        //     $('.set-category-search input[name=searchPick]').focus();        // }        // this.searchClose = function() {        //     $('.set-category-search input[name=searchPick]').val('');        //     $('.set-menu-list div[class^=menu-] li').show();        //     this.tabChange(this.currentType);        //     $('.set-category-search').css('display', 'none');        // }        // this.guideOpen = function() {        //     this.guideWrap.css({        //         'display': 'flex'        //     });        // }        this.removePickMenu = function() {            // $('ul.picks').height($('ul.picks').outerHeight());            var t = $(event.target).closest('li');            var data = {                'method': 'menuSelect',                'type': t.data('type'),                'type_idx': t.data('type_idx')            }            var returndata = this.ajax(data);            if (returndata == 'delete') {                this.firstLoading = true;                this.getUserData();                $('div.menu-' + data.type).find('li').each(function() {                    if ($(this).data('type_idx') == '_' + data.type_idx) {                        $(this).removeClass('on');//find('.list-menu-btn img').attr('src', $(this).find('.list-menu-btn img').attr('src').replace('on.png', 'off.png'))                    }                })                //            }        }        this.addPickMenu = function() {            $(""#att-lab"").show();            // this.setWrap.show();            // $('#att-lab').css({            //    'overflow-y': 'hidden',            // });            $('body,html').addClass('scrollOff');        }        this.getUserData = function() {            if (!this.firstLoading) {                return false;            }            var data = {                'method': 'getUserData'            }            var returndata = this.ajax(data);            var json = JSON.parse(returndata);            var col = $('col-select > btwrap');            if ($("".btimgwrap[data-type='"" + json.col + ""']"")) {                $("".btimgwrap[data-type='"" + json.col + ""']"").addClass('on');            }            //움직이는 이미지 멈추기 버튼            // var img = $('.git-stop-btn img');            // json.gifstop = json.gifstop ?  json.gifstop : 'off';            // img.attr('src', img.attr('src').replace(/gif_[a-z]{2,3}.png/,""/gif_""+json.gifstop+"".png"")  );            var html = this.pickmenuhtml;            $('ul.picks').each(function(uli) {                $(this).empty();                for (var i = 0; i < 5; i++) {                    var j;                    if (json.pickmenu) {                        j = json.pickmenu[i];                    }                    $(this).append(html);                    var li = $(this).find('li').eq(i);                    if (j) {                        var imgtmp = new Image();                        imgtmp.src = j.imgsrc;                        li.find('.list-icon img').attr('src', j.imgsrc+'?v=12');                        li.find('.list-content').text(j.name);                        li.find('.remove-pick').show();                        li.data('type', j.type).data('type_idx', j.type_idx);                        if( $(this).hasClass('pop-picks') ){                            li.find('.list-icon').attr('onclick','location.href=""'+j.href+'""');                            li.find('.list-content').attr('onclick','location.href=""'+j.href+'""');                        }                    } else if (uli > 0) {                        // li.find('.list-content').text('추가');                    }                }            });            this.firstLoading = false;        }        // this.colChange = function() {        //     var t = $(event.target).closest('div.btimgwrap');        //     var col = t.data('type');        //     var data = {        //         'method': 'colChange',        //         'type': col        //     }        //     var returndata = this.ajax(data);        //     if (returndata != 'N') {        //         $('div.btimgwrap').removeClass('on');        //         t.addClass('on');        //         $('.goods-list ul.col2, .goods-list ul.col3 , ul.col2.scrollList, ul.col3.scrollList').each(function() {        //             $(this).removeClass('col2').removeClass('col3').addClass('col' + col);        //         });        //     } else {        //         alert('로그인후 사용 가능합니다');        //         return false;        //     }        // }        this.menuSelect = function() {            var t = $(event.target).closest('li');            // var current = t.find('.list-menu-btn img').attr('src');            var data = {                'method': 'menuSelect',                'name': t.data('name'),                'href': t.data('href'),                'imgsrc': t.data('imgsrc'),                'type': t.data('type'),                'type_idx': t.data('type_idx')            }            var returndata = this.ajax(data);            if (returndata == 'N') {                alert('로그인후 사용 가능합니다');                return;            }            if (returndata == 'insert') {                t.addClass(""on"");                // current = current.replace('off.png', 'on.png');            } else if (returndata == 'delete') {                t.removeClass(""on"");                // current = current.replace('on.png', 'off.png');            } else {                alert('Pick메뉴는 최대 5개까지 설정 가능합니다');                return;            }            // t.find('.list-menu-btn img').attr('src', current);            this.firstLoading = true;            this.getUserData();        }        this.tabChange = function(type) {            if (event) {                if ($(event.target).hasClass('att-tab')) {                    $(event.target).addClass('on').siblings().removeClass('on');                }            }            var tab = $('.set-menu-list');            tab.scrollTop(0);            tab.children().hide();            var currentTab = tab.find('.menu-' + type);            currentTab.show();            if (currentTab.find('li').length > 0) {                return false;            }            var data = {                'method': 'tabChange',                'type': type            };            var returndata = this.ajax(data);            if (returndata) {                var j = JSON.parse(returndata);                for (k in j) {                    var son = j[k];                    currentTab.children('ul').append(this.menuhtml)                    var added = currentTab.find('li').last();                    added.find('.list-menu-icon img').attr('src', son.imgurl+""?v=12"");                    added.find('.list-menu-title').text(son.name);                    added.data('imgsrc', son.imgurl).data('href', son.linkurl).data('type', type).data('type_idx', k).data('name', son.name);                    if (son.check == 'on') {                        added.addClass('on');                        // added.find('.list-menu-btn img').attr('src', added.find('.list-menu-btn img').attr('src').replace('off.png', 'on.png'));                    }                }            }        }        this.gifStopChange = function(){            var data = {                'method': 'gifStopChange'            };            var returndata = this.ajax(data);            if(returndata == 'N'){                alert('로그인후 사용 가능합니다');                return false;            }            $("".gifonoff"").toggleClass('on');            //움직이는 이미지 멈추기 버튼            // var img = $('.git-stop-btn img');            // img.attr('src', img.attr('src').replace(/gif_[a-z]{2,3}.png/,""/gif_""+returndata+"".png"")  );            // sessionStorage.setItem('listLoc','');            if( confirm('새로고침 후에 적용됩니다 새로고침 하시겠습니까?') ){                location.reload();            }        }        this.ajax = function(dataobj) {            var returnData = '';            $.ajax({                url: '/_lab.php',                type: 'post',                data: dataobj,                async: false,                success: function(v) {                    returnData = v;                }            })            return returnData;        }    }    var attLab = new Lab();    attLab.init();    // attLab.showPop();","해당 스크립트는 ""attLab""이라는 객체를 생성하고 초기화하는 것으로 보입니다. 이 객체는 사용자 인터페이스와 상호작용하는 기능들을 제공하는 것으로 보입니다. ""showPop"" 함수는 초기화 시에 호출되며, 사용자에게 팝업을 표시합니다. ""closeWindow"" 함수는 창을 닫는 역할을 하고, ""closePop"" 함수는 팝업을 닫는 역할을 합니다. ""pickMenuShow"" 함수는 메뉴를 표시하는 역할을 하고, ""removePickMenu"" 함수는 메뉴를 제거하는 역할을 합니다. ""addPickMenu"" 함수는 메뉴를 추가하는 역할을 하고, ""getUserData"" 함수는 사용자 데이터를 가져오는 역할을 합니다. 이 스크립트는 사용자 인터페이스와 관련된 다양한 기능을 제공하는 것으로 보입니다.",
"        var header2308ddi = new Swiper('.header-2308-ddi',{            loop:true,            autoplay: true,            autoplaySpeed: 5000,            observer: true,            observeParents: true,        });    ","해당 스크립트는 Swiper라는 라이브러리를 사용하여 헤더 부분에 이미지 슬라이드쇼를 구현하는 역할을 합니다. autoplay 옵션을 통해 자동 재생이 가능하며, observer와 observeParents 옵션을 통해 DOM 변경을 감지하여 슬라이드쇼를 업데이트합니다.",
"                        var recentgoods_swiper = new Swiper('.recentgoods', {                            observer: true,                            observeParents: true,                            slidesPerView: 4,                            navigation: {                                nextEl: '.recentnext',  // 다음(next) 버튼 요소 선택자                                prevEl: '.recentprev'   // 이전(prev) 버튼 요소 선택자                            },                        });                    ","해당 스크립트는 '최근 상품'을 스와이퍼(swiper)로 표시하기 위한 것입니다. 스와이퍼는 4개의 상품을 한 번에 보여주며, 이전(prev) 버튼과 다음(next) 버튼을 사용하여 이동할 수 있습니다.",
"                document.addEventListener('click',function(){                    if( !event.target.closest('.header-burger') && !event.target.closest('.header-menu') ){                        document.querySelector('.header-burger').style.display = 'none';                    }                })                document.querySelectorAll('.header-top-search-input').forEach(ele=>{                    ele.addEventListener('focus',function(){                        // this.style.width = '130px';                    })                    ele.addEventListener('blur',function(){                        // this.style.width = '70px';                    })                })                function openHeaderSearch(){                    document.querySelector('.header-burger').style.display = 'none';                    document.querySelector('.header-search').style.display='block';                }            ","해당 스크립트는 다음과 같은 역할을 합니다.

1. 클릭 이벤트를 감지하여, 헤더 메뉴 영역 이외의 곳을 클릭하면 헤더 버거 메뉴를 숨깁니다.

2. 헤더 상단 검색 입력창에 포커스되면 너비를 늘리고, 포커스가 해제되면 너비를 줄입니다.

3. 헤더 검색창을 열면 헤더 버거 메뉴를 숨기고, 헤더 검색창을 보여줍니다.

위의 내용을 한글로 해석하면 다음과 같습니다.

1. 클릭 이벤트를 감지하여, 헤더 메뉴 영역 이외의 곳을 클릭하면 헤더 버거 메뉴를 숨깁니다.

2. 헤더 상단 검색 입력창에 포커스되면 너비를 늘리고, 포커스가 해제되면 너비를 줄입니다.

3. 헤더 검색창을 열면 헤더 버거 메뉴를 숨기고, 헤더 검색창을 보여줍니다.",
"            document.addEventListener('click',function(){                if( !event.target.closest('.header-search') && !event.target.closest('.header-top-search') && !event.target.closest('.main-searcharea') ){                    document.querySelector('.header-search').style.display = 'none';                }            })        ","해석된 스크립트는 클릭 이벤트를 감지하여, .header-search, .header-top-search, .main-searcharea 클래스를 갖지 않은 요소를 클릭했을 때 .header-search 요소를 숨기는 역할을 합니다.",
https://developers.kakao.com/sdk/js/kakao.min.js,죄송합니다. 제가 직접적으로 외부 링크를 열어서 스크립트를 해석하는 것은 안전하지 않습니다. 하지만 당신이 원하는 스크립트의 역할을 설명해 드릴 수 있습니다. 스크립트를 설명해 주시겠어요?,
"  //<![CDATA[    // 사용할 앱의 JavaScript 키를 설정해 주세요.    Kakao.init('b14f716a6930574535cecb5ab4c88c68');    // 카카오 로그인 버튼을 생성합니다.    Kakao.Auth.createLoginButton({      container: '#kakao-login-btn',      success: function(authObj) {        //alert(JSON.stringify(authObj));        // 로그인 성공시, API를 호출합니다.        Kakao.API.request({          url: '/v2/user/me',          success: function(res) {            //alert(JSON.stringify(res));			login_proc(res);          },          fail: function(error) {            alert(JSON.stringify(error));          }        });      },      fail: function(err) {		 if( err['error_description'] == 'User denied access' ){			//alert('취소되었습니다.');		 }else{			alert(JSON.stringify(error));		 }      }    });  //]]> function kakao_login_call(){		Kakao.Auth.login({		success: function(authObj) {			// 로그인 성공시, API를 호출합니다.			Kakao.API.request({				url: '/v2/user/me',				success: function(res) {					login_proc(res);									},				fail: function(err) {					 if( err['error_description'] == 'User denied access' ){						//alert('취소되었습니다.');					 }else{						alert(JSON.stringify(error));					 }				}			});		},		fail: function(err) {			alert(JSON.stringify(err));		}	}); } function kakao_login_call2(){	Kakao.Auth.login({		success: function(authObj) {			// 로그인 성공시, API를 호출합니다.			Kakao.API.request({				url: '/v2/user/me',				success: function(res) {					//alert(res.id);					//login_proc(res);					var id = user_sync_memid(res.id);					if( id == '' ){						login_proc(res);					}else{						alert(id+"" 아이디로 이미 가입되어 있습니다.\n중복 가입은 불가능 합니다."");						kakao_pop_close();					}				},				fail: function(err) {					 if( err['error_description'] == 'User denied access' ){						//alert('취소되었습니다.');					 }else{						alert(JSON.stringify(error));					 }				}			});		},		fail: function(err) {			alert(JSON.stringify(err));		}	}); } function user_sync_memid(id){	 var id = $.ajax({		url:'/api/kakaoSync/memidCheck.php',		type:'post',		async:false,		data:{'id':id},		success:function(code){		}	 }).responseText;	return id; } function login_proc(json){		if( json.id == '' ){		alert(""네트워크 에러발생\n문제가 지속될시 고객센터로 문의해주세요."");		return false;	}	$('#kakao_form #id').val(json.id);	$('#kakao_form #nickname').val(json.properties.nickname);	$('#kakao_form #cp').val(json.kakao_account.phone_number);	$('#kakao_form #email').val(json.kakao_account.email);	$('#kakao_form #birthyear').val(json.kakao_account.birthyear);	$('#kakao_form #birthday').val(json.kakao_account.birthday);	$('#kakao_form').submit(); }","해석 결과는 다음과 같습니다:

```
Kakao.init('b14f716a6930574535cecb5ab4c88c68');
container: '#kakao-login-btn',
url: '/v2/user/me',
url: '/v2/user/me',
url: '/v2/user/me',
url: '/v2/user/me',
url:'/api/kakaoSync/memidCheck.php',
'id':id,
```",
https://apis.google.com/js/api:client.js,죄송합니다. 스크립트를 해석하기 위해서는 스크립트 내용이 필요합니다. 스크립트를 제공해주시겠어요?,
"// 구글 로그인 scriptvar googleUser = {};gapi.load('auth2', function(){  // Retrieve the singleton for the GoogleAuth library and set up the client.  auth2 = gapi.auth2.init({	//client_id: '801977170415-vn76tta48g27v86un4n8lse97e1r8tq2.apps.googleusercontent.com',	client_id: '751878850618-vmkf0m1u8ij14it4llk29jfj1hhfu7ts.apps.googleusercontent.com',	cookiepolicy: 'single_host_origin',	// Request scopes in addition to 'profile' and 'email'	//scope: 'additional_scope'  });});function google_login_call(login){		attachSignin(document.getElementById('google_btn'));	}function attachSignin(element) {	auth2.attachClickHandler(element, {},		function(googleUser) {			console.log(googleUser.getBasicProfile().getId());			$('#google_id').val(googleUser.getBasicProfile().getId());			$('#google_email').val(googleUser.getBasicProfile().getEmail());			$('#google_name').val(googleUser.getBasicProfile().getName());			//$('#google_img').val(googleUser.getBasicProfile().getImageUrl());			window.open('','google_login','width=1024,height=768');			$('#google_form').submit();		}, function(error) {		  //alert(JSON.stringify(error, undefined, 2));		  //alert(""로그인을 취소하였습니다."");	});}","해당 스크립트는 구글 로그인 기능을 구현하기 위한 것으로 보입니다. 스크립트에서는 구글 로그인 버튼 클릭 시 사용자의 기본 프로필 정보(아이디, 이메일, 이름)를 가져와서 각각의 값을 각각의 필드에 채워 넣는 역할을 합니다. 또한, 로그인이 성공하면 해당 정보를 서버로 제출하는 기능도 포함되어 있습니다.",
"    document.querySelectorAll('.header-menu > li').forEach(ele=>{        ele.addEventListener('mouseenter',function(){            document.querySelectorAll('.header-menu .sub').forEach(ele=> ele.style.display = 'none');            if( this.querySelector('.sub') ){                this.querySelector('.sub').style.display = 'block';            }        })        ele.addEventListener('mouseleave',function(){            document.querySelectorAll('.header-menu .sub').forEach(ele=> ele.style.display = 'none');        })    })","```word
script: 'header-menu > li' 'mouseenter' 'mouseleave' '.sub' 'display = none' 'display = block'
role: 헤더 메뉴에 마우스를 올렸을 때 서브 메뉴를 보여주는 기능을 담당
```",
"$('.main-slide').slick({	arrows : true,	infinite: true,	// centerMode : true,	slidesToShow: 1,	// slidesToScroll: 1,	// variableWidth: true,	autoplay: true,	autoplaySpeed: 5000});$('.slide-20201023').slick({	arrows : false,	slidesToShow: 2,	speed:5000,	autoplay: true,	autoplaySpeed: 0,	cssEase: 'cubic-bezier(0.1,0.1,0.1,0.1)',	//pauseOnHover:false,	//pauseOnFocus:false,	draggable:false,});Date.now || (Date.now = function() {	return (new Date).getTime()}),function() {	""use strict"";	for (var t = [""webkit"", ""moz""], e = 0; e < t.length && !window.requestAnimationFrame; ++e) {		var i = t[e];		window.requestAnimationFrame = window[i + ""RequestAnimationFrame""], window.cancelAnimationFrame = window[i + ""CancelAnimationFrame""] || window[i + ""CancelRequestAnimationFrame""]	}	if (/iP(ad|hone|od).*OS 6/.test(window.navigator.userAgent) || !window.requestAnimationFrame || !window.cancelAnimationFrame) {		var s = 0;		window.requestAnimationFrame = function(t) {			var e = Date.now(),				i = Math.max(s + 16, e);			return setTimeout(function() {				t(s = i)			}, i - e)		}, window.cancelAnimationFrame = clearTimeout	}}(),function(t) {	t.snowfall = function(e, i) {		function s(s, n, a, o) {			this.x = s, this.y = n, this.size = a, this.speed = o, this.step = 0, this.stepSize = h(1, 10) / 100, i.collection && (this.target = m[h(0, m.length - 1)]);			var r = null;			i.image ? (r = document.createElement(""img""), r.src = i.image) : (r = document.createElement(""div""), t(r).css({				background: i.flakeColor			})), t(r).attr({				""class"": ""snowfall-flakes""			}).css({				width: this.size,				height: this.size,				position: i.flakePosition,				top: this.y,				left: this.x,				fontSize: 0,				zIndex: i.flakeIndex			}), t(e).get(0).tagName === t(document).get(0).tagName ? (t(""body"").append(t(r)), e = t(""body"")) : t(e).append(t(r)), this.element = r, this.update = function() {				if (this.y += this.speed, this.y > l - (this.size + 6) && this.reset(), this.element.style.top = this.y + ""px"", this.element.style.left = this.x + ""px"", this.step += this.stepSize, this.x += y === !1 ? Math.cos(this.step) : y + Math.cos(this.step), i.collection && this.x > this.target.x && this.x < this.target.width + this.target.x && this.y > this.target.y && this.y < this.target.height + this.target.y) {					var t = this.target.element.getContext(""2d""),						e = this.x - this.target.x,						s = this.y - this.target.y,						n = this.target.colData;					if (void 0 !== n[parseInt(e)][parseInt(s + this.speed + this.size)] || s + this.speed + this.size > this.target.height)						if (s + this.speed + this.size > this.target.height) {							for (; s + this.speed + this.size > this.target.height && this.speed > 0;) this.speed *= .5;							t.fillStyle = ""#fff"", void 0 == n[parseInt(e)][parseInt(s + this.speed + this.size)] ? (n[parseInt(e)][parseInt(s + this.speed + this.size)] = 1, t.fillRect(e, s + this.speed + this.size, this.size, this.size)) : (n[parseInt(e)][parseInt(s + this.speed)] = 1, t.fillRect(e, s + this.speed, this.size, this.size)), this.reset()						} else this.speed = 1, this.stepSize = 0, parseInt(e) + 1 < this.target.width && void 0 == n[parseInt(e) + 1][parseInt(s) + 1] ? this.x++ : parseInt(e) - 1 > 0 && void 0 == n[parseInt(e) - 1][parseInt(s) + 1] ? this.x-- : (t.fillStyle = ""#fff"", t.fillRect(e, s, this.size, this.size), n[parseInt(e)][parseInt(s)] = 1, this.reset())				}(this.x + this.size > d - c || this.x < c) && this.reset()			}, this.reset = function() {				this.y = 0, this.x = h(c, d - c), this.stepSize = h(1, 10) / 100, this.size = h(100 * i.minSize, 100 * i.maxSize) / 100, this.element.style.width = this.size + ""px"", this.element.style.height = this.size + ""px"", this.speed = h(i.minSpeed, i.maxSpeed)			}		}		function n() {			for (r = 0; r < a.length; r += 1) a[r].update();			f = requestAnimationFrame(function() {				n()			})		}		var a = [],			o = {				flakeCount: 35,				flakeColor: ""#ffffff"",				flakePosition: ""absolute"",				flakeIndex: 999999,				minSize: 1,				maxSize: 2,				minSpeed: 1,				maxSpeed: 5,				round: !1,				shadow: !1,				collection: !1,				collectionHeight: 40,				deviceorientation: !1			},			i = t.extend(o, i),			h = function(t, e) {				return Math.round(t + Math.random() * (e - t))			};		t(e).data(""snowfall"", this);		var r = 0,			l = t(e).height(),			d = t(e).width(),			c = 0,			f = 0;		if (i.collection !== !1) {			var p = document.createElement(""canvas"");			if (p.getContext && p.getContext(""2d""))				for (var m = [], w = t(i.collection), g = i.collectionHeight, r = 0; r < w.length; r++) {					var u = w[r].getBoundingClientRect(),						x = t(""<canvas/>"", {							""class"": ""snowfall-canvas""						}),						z = [];					if (u.top - g > 0) {						t(""body"").append(x), x.css({							position: i.flakePosition,							left: u.left + ""px"",							top: u.top - g + ""px""						}).prop({							width: u.width,							height: g						});						for (var v = 0; v < u.width; v++) z[v] = [];						m.push({							element: x.get(0),							x: u.left,							y: u.top - g,							width: u.width,							height: g,							colData: z						})					}				} else i.collection = !1		}		for (t(e).get(0).tagName === t(document).get(0).tagName && (c = 25), t(window).bind(""resize"", function() {				l = t(e)[0].clientHeight, d = t(e)[0].offsetWidth			}), r = 0; r < i.flakeCount; r += 1) a.push(new s(h(c, d - c), h(0, l), h(100 * i.minSize, 100 * i.maxSize) / 100, h(i.minSpeed, i.maxSpeed)));		i.round && t("".snowfall-flakes"").css({			""-moz-border-radius"": i.maxSize,			""-webkit-border-radius"": i.maxSize,			""border-radius"": i.maxSize		}), i.shadow && t("".snowfall-flakes"").css({			""-moz-box-shadow"": ""1px 1px 1px #555"",			""-webkit-box-shadow"": ""1px 1px 1px #555"",			""box-shadow"": ""1px 1px 1px #555""		});		var y = !1;		i.deviceorientation && t(window).bind(""deviceorientation"", function(t) {			y = .1 * t.originalEvent.gamma		}), n(), this.clear = function() {			t("".snowfall-canvas"").remove(), t(e).children("".snowfall-flakes"").remove(), cancelAnimationFrame(f)		}	}, t.fn.snowfall = function(e) {		return ""object"" == typeof e || void 0 == e ? this.each(function() {			new t.snowfall(this, e)		}) : ""string"" == typeof e ? this.each(function() {			var e = t(this).data(""snowfall"");			e && e.clear()		}) : void 0	}}(jQuery);var mysnowImg = document.getElementById(""mysnowImg"");if(mysnowImg){	mysnowImg.onload = function() {		$('#snow').snowfall({			image :""https://atimg.sonyunara.com/files/admin/newpro/1708409646_1.png"", minSize:10,			maxSize:30,			minSpeed:0.5,			maxSpeed:2,			flakeCount:15,		});	};}","해당 스크립트는 웹 페이지에 슬라이드쇼와 눈 내리는 효과를 추가하는 역할을 합니다.

슬라이드 쇼는 `$('.main-slide')`와 `$('.slide-20201023')` 클래스를 가진 요소들에 대해 설정되어 있으며, 눈 내리는 효과는 `$('#snow')` 요소에 적용되어 있습니다.

슬라이드 쇼의 설정은 다음과 같습니다:
- 화살표 표시: true
- 무한 루프: true
- 보여지는 슬라이드 수: 1 또는 2
- 자동 재생: true
- 자동 재생 속도: 5000ms 또는 0ms

눈 내리는 효과의 설정은 다음과 같습니다:
- 이미지: ""https://atimg.sonyunara.com/files/admin/newpro/1708409646_1.png""
- 최소 크기: 10
- 최대 크기: 30
- 최소 속도: 0.5
- 최대 속도: 2
- 눈송이 개수: 15

이를 통해 해당 스크립트는 웹 페이지에 슬라이드 쇼와 눈 내리는 효과를 추가하는 역할을 합니다.",
"            $("".trend-pic-fiximg"").on('init reInit afterChange', function(event, slick, currentSlide, nextSlide) {                var i = (currentSlide ? currentSlide : 0) + 1;                $('.slick-paging').text(i + ' / ').append(""<span style='color:#b3b2b1'></span>"");                $('.slick-paging span').text(slick.slideCount);            });            $("".trend-pic-fiximg"").slick({                arrows: true,                slidesToShow: 4,                infinite: true,                autoplay: true,                autoplaySpeed: 5000            })        ","해석 결과: 
- role: 이미지 슬라이드쇼
- 값:
  - arrows: true
  - slidesToShow: 4
  - infinite: true
  - autoplay: true
  - autoplaySpeed: 5000",
"   var mainbottomswip = new Swiper("".main-select-goods"",{        observer: true,        observeParents: true,    })     mainbottomswip.on('slideChange',function(){        document.querySelectorAll('.main-seleft-cate li').forEach(( ele,i) => {            ele.classList.remove('on');            if( mainbottomswip.realIndex == i ){                ele.classList.add('on');            }        })        document.querySelector('.main-select-c .btn.tac').setAttribute(""onclick"",""location.href='/shop/season.php?location=main_bottom&&sc=""+document.querySelector('.main-seleft-cate li.on').innerHTML.replace(""#"",'')+""'"");    })    document.querySelectorAll('.main-select-c .main-seleft-cate li').forEach((ele, i) => {        ele.addEventListener('click', function() {            mainbottomswip.slideTo(i);        })    })","변수 mainbottomswip를 생성하여 "".main-select-goods"" 클래스를 가진 요소를 Swiper로 만들고, slideChange 이벤트가 발생하면 "".main-seleft-cate li"" 요소들을 찾아 각각에 대해 특정 동작을 수행한다. 또한, "".main-select-c .main-seleft-cate li"" 요소들을 찾아 각각에 대해 클릭 이벤트를 추가한다.",
"    $("".snap-slick"").slick({        slidesToShow : 1,        infinite: true,        autoplay: true,        autoplaySpeed: 3000,    });    function txtChange(){        var title = $('.slick-current .snapImg').data('title');        if(!title.length){            title = $('.sanpBtnimg:first .snapImg').data('title');        }        var ori_title = $('.snaptime .time-hide:first').text().trim();        if( title != ori_title && title != '' ){            $('.snaptime .time-hide:first').text(title);        }        $('.snaptime').show();    }    txtChange();    $("".snap-slick"").on(""afterChange"",function(e,s,c,n){        $('.snapBtn').attr('src', $('#snapLayer .slick-active img').attr('src'));        var cur = c;        $('.snpcurr').text(cur+1);        txtChange();    });    $(window).scroll(function(){		if( $(window).scrollTop() > 150 ){			$('#snapLayer').css({'bottom':'120px'});		}else if($('#quick_delivery').css('display') == 'none'){			$('#snapLayer').css({'bottom':'20px'});		}    })    $('#snapLayer .snapBtn').click(function(){        $('#snapLayer, .sanpBtnimg img').addClass(""sanpBtnani"");        $('#snapLayer').removeClass(""sanpBtnanicls"");        $('.snapBtn').hide();        $('.sanpBtnimg').show();        $('.clsSnapbt').show();        $('.snap-slick').slick('slickPlay');    });    $('.clsSnapbt').click(function(){        $('#snapLayer, .sanpBtnimg img').removeClass(""sanpBtnani"");        $('#snapLayer').addClass(""sanpBtnanicls"");        $('.snapBtn').show();        $('.sanpBtnimg').hide();        $('.clsSnapbt').hide();        $('.snap-slick').slick('slickPause');    })    ","이 스크립트는 웹 페이지에서 사진 갤러리를 제어하는 역할을 합니다. slick 라이브러리를 사용하여 갤러리를 구현하고, 갤러리의 이미지 변경 및 제어를 위한 함수들을 정의하고 있습니다. 또한 스크롤 이벤트에 따라 갤러리 레이어의 위치를 조절하고, 버튼 클릭에 따라 갤러리의 재생 및 일시정지를 제어하는 기능을 포함하고 있습니다.",
"	function setCookie(name,value,hour) {		var date = new Date();		if(hour==0){			date.setTime(date.getTime() + 60*1000);		}else{			date.setTime(date.getTime() + hour*60*60*1000);		}		document.cookie = name + '=' + value + ';expires=' + date.toUTCString() + ';path=/';	}	function modal_popup_close() {		$('#modal-popup').hide();	}	function modal_popup_today_close() {		setCookie('modal_popup',1,24);		modal_popup_close();	}","이 스크립트는 쿠키를 설정하고 모달 팝업을 닫는 기능을 담은 것으로 보입니다.

쿠키 설정 함수는 이름, 값, 시간을 매개변수로 받아서 쿠키를 설정합니다. 모달 팝업을 닫는 함수는 모달을 닫고 쿠키를 설정하여 오늘 하루 동안은 다시 팝업이 뜨지 않도록 하는 역할을 합니다.",
"// 노출 지면 타입 정보 META TAG 생성 (META TAG 생성은 1. 공통스크립트 호출보다 상단에 적용되어야 합니다.)var meta = document.createElement('meta');meta.setAttribute('name', 'more_page_type');meta.setAttribute('content', 'main');       // 메인페이지 : 'main', 카테고리페이지 : 'category', 상세페이지 : 'detail'document.getElementsByTagName('head')[0].appendChild(meta);","해당 스크립트는 웹페이지의 노출 지면 타입 정보를 META TAG로 생성하는 역할을 합니다. 생성된 META TAG는 페이지의 타입을 나타내며, 'main'은 메인페이지, 'category'는 카테고리페이지, 'detail'은 상세페이지를 나타냅니다.",
https://static.criteo.net/js/ld/ld.js,죄송합니다. 스크립트를 해석하려면 스크립트 내용이 필요합니다. 스크립트를 제공해 주시겠어요?,
"window.criteo_q = window.criteo_q || [];window.criteo_q.push({ event: ""setAccount"", account: 7835 },{ event: ""setEmail"", email: """" },{ event: ""setSiteType"", type: ""d"" },{ event: ""viewHome"" });","```word
setAccount 7835
setEmail 
setSiteType d
viewHome 
```",
"$(window).scroll(function(){	var obj = $('.scroll-loading.on:last');	var top = $(this).scrollTop()+screen.availHeight;	if( top >= obj.offset().top ){		obj = $('.scroll-loading').not('.on').filter(':first');		if( obj.data('html') ){			$.get(obj.data('html'),function(html){				obj.append(html);			});		}		obj.addClass('on');	}});","이 스크립트는 페이지 스크롤 이벤트를 감지하여 스크롤이 일정 위치에 도달하면 새로운 콘텐츠를 로드하는 기능을 수행합니다.

해석된 결과:
- window: scroll
- obj: .scroll-loading.on:last
- top: $(this).scrollTop()+screen.availHeight
- obj: .scroll-loading.not(.on).filter(:first)
- obj.data('html')
- obj.append(html)
- obj: .scroll-loading.on",
"		document.querySelectorAll('.btn_qucik_wrap > li').forEach(ele => {			ele.addEventListener(""mouseover"",function(){				this.querySelector('.hovertxt').style.display = 'block';			})			ele.addEventListener(""mouseout"",function(){				this.querySelector('.hovertxt').style.display = 'none';			})		});		",해당 스크립트는 HTML 문서에서 클래스 이름이 'btn_qucik_wrap'인 요소의 하위 항목들을 찾아 마우스 오버와 아웃 이벤트에 대한 리스너를 추가하는 역할을 합니다. 이를 통해 해당 요소의 자식 요소들에 대한 호버텍스트를 보여주거나 숨김으로써 사용자 경험을 향상시키는 역할을 합니다.,
"	function go_smart_search(){		var keyword = $('#search_keyword1').val();		if( !keyword ){			$('#search_keyword').val('');		}else{			$('#search_keyword').val(keyword);		}		$('#smartSearchForm').find('input').each(function(){			if( $(this).val() == '' ){				$(this).remove();			}		});		$('#smartSearchForm').submit();	}	function searchSmartCheck(){		var keyword = $('#search_keyword1').val().trim();		$('#search_keyword').val(keyword);		$('#smart_keyword').val(keyword);		$('#smartSearchForm').find('input').each(function(){			if( $(this).val() == '' ){				$(this).remove();			}		});		document.getElementById('smartSearchForm').submit();	}	$(function(){		$(""#search_keyword1"").keydown(function(key) {			if (key.keyCode == 13) {				searchSmartCheck();			}		});	});	function go_smartSearch(txt,type){		var color_arr = new Array();		var brand_arr = new Array();		var size_arr = new Array();		var neck_arr = new Array();		var model_arr = new Array();		var season_arr = new Array();		var angam_arr = new Array();		var theme_arr = new Array();		var type_arr = new Array();		var pmemo6_arr = new Array();		var pmemo3_arr = new Array();		var pmemo5_arr = new Array();		var height_arr = new Array();		var pmemo15_arr = new Array();		var pmemo2_arr = new Array();		var pmemo14_arr = new Array();		var style_arr = new Array();		var deli_arr = new Array();		var chk = $(event.target).closest('li');		var form = $('#smartSearchForm');		// btn event		$(chk).toggleClass('on');		// color 값		$('.colors .on').each(function() {			var color = $(this).find('a').data(""color"");			color_arr.push(color);		});		// brand 값		$('.brand .on').each(function() {			var brand = $(this).find('a').data(""brand"");			brand_arr.push(brand);		});		// size 값		$('.size_list .on').each(function() {			var size = $(this).find('a').data(""size"");			size_arr.push(size);		});		// 넥종류 값		$('.necks .on').each(function() {			var neck = $(this).find('a').data(""neck"");			neck_arr.push(neck);		});		// model 값		$('.models .on').each(function() {			var model = $(this).find('a').data(""model"");			model_arr.push(model);		});		// season 값		$('.season .on').each(function() {			var season = $(this).find('a').data(""season"");			season_arr.push(season);		});		// 안감		$('.angam .on').each(function() {			var angam = $(this).find('a').data(""pmemo"");			angam_arr.push(angam);		});		// 테마		$('.theme .on').each(function() {			var theme = $(this).find('a').data(""theme"");			theme_arr.push(theme);		});		//타입		$('.type .on').each(function() {			var type = $(this).find('a').data(""type"");			type_arr.push(type);		});		//주요소재		$('.pmemo6 .on').each(function() {			var pmemo6 = $(this).find('a').data(""pmemo6"");			console.log(pmemo6);			pmemo6_arr.push(pmemo6);		});		//비침		$('.pmemo3 .on').each(function() {			var pmemo3 = $(this).find('a').data(""pmemo3"");			pmemo3_arr.push(pmemo3);		});		//기장		$('.height .on').each(function() {			var height = $(this).find('a').data(""height"");			height_arr.push(height);		});		//두께		$('.pmemo5 .on').each(function() {			var pmemo5 = $(this).find('a').data(""pmemo5"");			pmemo5_arr.push(pmemo5);		});		//핏		$('.pmemo15 .on').each(function() {			var pmemo15 = $(this).find('a').data(""pmemo15"");			pmemo15_arr.push(pmemo15);		});		//신축성		$('.pmemo2 .on').each(function() {			var pmemo2 = $(this).find('a').data(""pmemo2"");			pmemo2_arr.push(pmemo2);		});		//밴딩		$('.pmemo14 .on').each(function() {			var pmemo14 = $(this).find('a').data(""pmemo14"");			pmemo14_arr.push(pmemo14);		});		//스타일		$('.style .on').each(function() {			var style = $(this).find('a').data(""style"");			style_arr.push(style);		});		//배송		$('.deli .on').each(function() {			var deli = $(this).find('a').data(""deli"");			deli_arr.push(deli);		});		$('input[name=""search_color""]').val(color_arr);		$('input[name=""search_brand""]').val(brand_arr);		$('input[name=""search_size""]').val(size_arr);		$('input[name=""search_neck""]').val(neck_arr);		$('input[name=""search_model""]').val(model_arr);		$('input[name=""search_season""]').val(season_arr);		$('input[name=""search_angam""]').val(angam_arr);		$('input[name=""search_theme""]').val(theme_arr);		$('input[name=""search_type""]').val(type_arr);		$('input[name=""search_pmemo6""]').val(pmemo6_arr);		$('input[name=""search_pmemo3""]').val(pmemo3_arr);		$('input[name=""search_pmemo5""]').val(pmemo5_arr);		$('input[name=""search_height""]').val(height_arr);		$('input[name=""search_pmemo15""]').val(pmemo15_arr);		$('input[name=""search_pmemo2""]').val(pmemo2_arr);		$('input[name=""search_pmemo14""]').val(pmemo14_arr);		$('input[name=""search_style""]').val(style_arr);		$('input[name=""search_deli""]').val(deli_arr);	}	function search_subject_change(subject) {		$('#search_subject_text').html(subject);	}	$(function(){		$('.tab_smart li').click(function(){			if( $(this).text() == '' ){				return;			}			var eq = $(this).data('eq');			$('.smartSearchMenu td').removeClass('on');			$(this).addClass('on');			$('.rangeBox').hide().eq(eq).show();			// 검색카테고리 변경			eq = eq == 'all' ? '':eq;			$('#search_cate').val(eq);		});		switch("""")		{			case '0101': search_subject_change('원피스 검색'); break;			case '0109': search_subject_change('블라우스 검색'); break;			case '0103': search_subject_change('아우터 검색'); break;			case '0110': search_subject_change('니트 검색'); break;			case '0111': search_subject_change('티셔츠 검색'); break;			case '0107': search_subject_change('스커트 검색'); break;			case '0108': search_subject_change('팬츠 검색'); break;			case '0303':  search_subject_change('Shoes 검색'); break;			case '': search_subject_change('통합 검색'); break;		}	});	","이 스크립트는 웹 페이지에서 스마트 검색을 수행하는 데 사용됩니다. 스마트 검색 기능은 사용자가 선택한 옷의 속성(색상, 브랜드, 사이즈, 모델, 계절, 테마 등)을 기반으로 상품을 필터링하는 데 사용됩니다.

스크립트는 사용자가 선택한 옷의 속성을 배열에 저장하고, 해당 배열을 폼 필드에 할당하여 서버로 전송합니다. 또한, 사용자가 선택한 검색 카테고리에 따라 검색 주제를 변경하는 기능도 포함되어 있습니다.

이 스크립트는 사용자가 스마트 검색을 통해 상품을 필터링하고, 검색 주제를 변경하는 데 사용됩니다.",
							var updownimg = true;							$('.inner').scroll(function(){								$('.updownimg').remove();								updownimg = false;								$('.inner').off('scroll');							})						,"해당 스크립트는 inner 클래스를 갖는 요소의 스크롤 이벤트를 감지하여 updownimg 클래스를 갖는 요소를 제거하고, updownimg 변수를 false로 설정한 후 스크롤 이벤트를 제거하는 역할을 합니다.",
"const memberBuyItem = {	loaded:false,	open(){		var cate = $('.tab_smart a.active').closest('li').data('eq');		$('#member-buy-area').empty();			$.ajax({				url:'/shop/smartsearch_buylist.php?cate='+cate,				type:'get',				async:false,				success:function(html){					$('#member-buy-area').append(html);				}			});		// }		$('#diff-form').show();	}}","이 스크립트는 ""memberBuyItem""이라는 객체를 정의하고 있습니다. 이 객체는 ""loaded""라는 속성을 가지고 있으며, ""open""이라는 메소드를 포함하고 있습니다. ""open"" 메소드는 특정 동작을 수행하는데, 이 동작은 화면에서 특정 요소를 찾아내고, 비동기적으로 서버와 통신하여 데이터를 받아와서 화면에 표시하는 것으로 보입니다. ""open"" 메소드는 또한 화면에서 다른 요소를 보이게 하는 동작도 수행합니다.",
"function quickViewClose(){	$('html,body').css('overflow','auto');}","해석: quickViewClose 함수는 'html,body' 요소의 오버플로우 속성을 'auto'로 설정하여 빠른 뷰를 닫는 역할을 합니다.",
https://static.cloudflareinsights.com/beacon.min.js/vedd3670a3b1c4e178fdfb0cc912d969e1713874337387,"죄송합니다. 저는 보안상의 이유로 외부 링크나 스크립트를 해석하거나 실행할 수 없습니다. 하지만, 링크의 용도나 스크립트의 목적이 무엇인지에 대한 질문이 있다면 도와드릴 수 있습니다. 스크립트가 하는 일에 대한 설명이 필요하시면 알려주세요.",
"	if (notice_getCookie(""quick_delivery"") != ""done1"") {		document.getElementById('quick_delivery').style.display = 'block';	}","""notice_getCookie(""quick_delivery"")""의 값을 가져와서 ""done1""과 비교합니다. 만약 두 값이 같지 않다면, ""quick_delivery""라는 id를 가진 요소를 화면에 보이도록 설정합니다.",
//<!--	function mobRf(){  		var rf = new EN();  		rf.sendRf();	}  //-->,"해석된 결과:
```
함수: mobRf
변수: rf
객체: EN
메소드: sendRf
```",
https://cdn.megadata.co.kr/js/enliple_min2.js,죄송합니다. 해당 URL에서 스크립트를 가져올 수 없습니다. 스크립트를 직접 복사하여 여기에 붙여넣어 주시겠어요?,
"	var _AceGID=(function(){var Inf=['gtc10.acecounter.com','8080','AS2A40235064849','AW','0','NaPm,Ncisy','ALL','0']; var _CI=(!_AceGID)?[]:_AceGID.val;var _N=0;var _T=new Image(0,0);if(_CI.join('.').indexOf(Inf[3])<0){ _T.src =( location.protocol==""https:""?""https://""+Inf[0]:""http://""+Inf[0]+"":""+Inf[1]) +'/?cookie'; _CI.push(Inf);  _N=_CI.length; } return {o: _N,val:_CI}; })();	var _AceCounter=(function(){var G=_AceGID;var _sc=document.createElement('script');var _sm=document.getElementsByTagName('script')[0];if(G.o!=0){var _A=G.val[G.o-1];var _G=(_A[0]).substr(0,_A[0].indexOf('.'));var _C=(_A[7]!='0')?(_A[2]):_A[3];var _U=(_A[5]).replace(/\,/g,'_');_sc.src=(location.protocol.indexOf('http')==0?location.protocol:'http:')+'//cr.acecounter.com/Web/AceCounter_'+_C+'.js?gc='+_A[2]+'&py='+_A[4]+'&gd='+_G+'&gp='+_A[1]+'&up='+_U+'&rd='+(new Date().getTime());_sm.parentNode.insertBefore(_sc,_sm);return _sc.src;}})();","```word
AceGID: gtc10.acecounter.com, 8080, AS2A40235064849, AW, 0, NaPm,Ncisy, ALL, 0
AceCounter: cr.acecounter.com, Web, AceCounter_AS2A40235064849.js, gc=AS2A40235064849, py=0, gd=gtc10, gp=8080, up=NaPm_Ncisy, rd=(new Date().getTime())
```",
"//<![CDATA[// sta1.com trace script Ver.1.0// var S_sta1_script_domain = ""attrangs.co.kr"";// var S_sta1_script_ver = ""1.0"";var S_sta1_script_check_num = 1;var S_sta1_script_location = ""trace.sta1.co.kr"";function S_cimgs() { return new Image(); }function S_pt(url){return document.location.protocol == ""https:"" ? ""https://""+url : ""http://""+url; }var S_sta1_cimg_url = S_sta1_script_location + ""/script/"" + S_sta1_script_domain + ""/check.gif?r="" + Math.random();var S_sta1_script_url = S_sta1_script_location + ""/script/"" + S_sta1_script_domain + ""/script.php?r="" + Math.random();function S_sta1_cbScIm(url){var S_sta1_load_check_time;var S_sta1_load_check_clearTimer = function() {if (S_sta1_load_check_time) {clearTimeout(S_sta1_load_check_time);S_sta1_load_check_time = null;}// };var S_sta1_load_check_handleFail = function() {this.onload = this.onabort = this.onerror = function() {};S_sta1_load_check_clearTimer();if (this.src === url) {this.src = ""#sta1"";}// };var S_sta1_load_check_img = S_cimgs();S_sta1_load_check_img.onerror = S_sta1_load_check_img.onabort = S_sta1_load_check_handleFail;S_sta1_load_check_img.onload = function() {ld_sta1_cbScSt();S_sta1_load_check_clearTimer();};S_sta1_load_check_img.src = url;S_sta1_load_check_time = setTimeout(function(theImg) {return function() {S_sta1_load_check_handleFail.call(theImg);};}(S_sta1_load_check_img), 3000);return(S_sta1_load_check_img);}function ld_sta1_cbScSt(){var S_sta1_html_head = document.getElementsByTagName(""head"")[0];var S_sta1_script= document.createElement(""script"");S_sta1_script.type= ""text/javascript"";var S_sta1_loaded = false;S_sta1_script.onreadystatechange= function () {if (this.readyState == ""loaded"" || this.readyState == ""complete""){ if (S_sta1_loaded) { return; } S_sta1_loaded = true; }// };S_sta1_script.src = S_pt(S_sta1_script_url);S_sta1_script.charset = ""utf-8"";S_sta1_html_head.appendChild(S_sta1_script);}S_sta1_cbScIm(S_pt(S_sta1_cimg_url));//]]>","해당 스크립트는 sta1.com에서 제공하는 추적 스크립트로 보입니다. 스크립트는 ""attrangs.co.kr"" 도메인을 추적하고, 버전은 ""1.0""입니다. 이 스크립트는 웹페이지의 방문자를 추적하고, 해당 정보를 서버로 보내는 역할을 하는 것으로 보입니다.",
"function fbqSearchKeyword() {  var uri = document.referrer;  if (!uri) return;  var link = document.createElement('a');  link.setAttribute('href', uri);  var pattern = new RegExp('[\\?&](?:utm_term|n_keyword|q|query)=([^&#]*)');  var query = link.search.match(pattern);  if (query && query.length > 0) {    var keyword = query[1].replace(/\+/gi, ""%20"");  }  if (keyword) {    fbq('trackCustom', 'SearchKeyword', {      hostname: link.hostname,      keyword: decodeURIComponent(keyword),    });}}fbqSearchKeyword();","해당 스크립트는 페이지의 referrer를 확인하여 검색 키워드를 추출하고, 이를 Facebook 픽셀의 trackCustom 함수를 사용하여 추적하는 역할을 합니다. 추출된 검색 키워드는 ""keyword""라는 이름의 변수에 저장되며, 해당 변수에 저장된 값을 Facebook 픽셀에 전송합니다.

추출된 값:
- keyword: decodeURIComponent(keyword)

이 스크립트는 페이지의 방문자가 이전 페이지에서 어떤 검색어를 사용했는지를 추적하여, 해당 정보를 페이스북에 전송하는데 사용됩니다.",
 ,죄송합니다. 그 스크립트가 무엇을 나타내는지 알려주세요.,
https://wcs.naver.net/wcslog.js,죄송합니다. 지금은 해당 URL의 내용을 해석하고 제공할 수 없습니다. 다른 도움이 필요하시면 알려주세요.,
"if (!wcs_add) var wcs_add={};wcs_add[""wa""] = ""s_3882fb178393"";if (!_nasa) var _nasa={};if(window.wcs){wcs.inflow('attrangs.co.kr');wcs_do(_nasa);}","해석된 결과는 다음과 같습니다.

```
wa: ""s_3882fb178393""
```

해당 스크립트는 웹사이트 추적 및 분석을 위한 웹페이지 태그 설정을 하는 것으로 보입니다. ""wa""는 추적을 위한 키이며, ""s_3882fb178393""는 해당 키에 대한 값으로 추정됩니다.",
"(function(i,s,o,g,r,a,m){if(s.getElementById(g)){return};a=s.createElement(o),m=s.getElementsByTagName(o)[0];a.id=g;a.async=1;a.src=r;m.parentNode.insertBefore(a,m)})(window,document,""script"",""crema-jssdk"",""//widgets.cre.ma/attrangs.co.kr/init.js"");",이 코드는 cre.ma의 JavaScript SDK를 웹 페이지에 추가하는 역할을 합니다. cre.ma는 웹사이트에 다양한 기능을 추가할 수 있는 서비스입니다.,
"$(document).on('click','.clickMap',function(e){	var name = $(this).data('clickmap');	$.ajax({		url:'/ajax_proc/clickmap.php',		type:'post',		data:{'mode':'w','name':name},		success:function(code){			if(code) eval(code);		}	});});// 구매 경로 추적try{	insert_buyloc();}catch(e){}","해석된 결과는 다음과 같습니다.

```
clickMap : 클릭 지도
mode : w
name : 클릭맵 이름
```

해석된 스크립트는 클릭맵을 클릭했을 때 해당 클릭맵의 이름을 서버로 전송하여 처리하는 기능을 수행하고, 구매 경로 추적을 시도하는 스크립트입니다.",
"	/* 탭뷰 */var cate = '';if(cate != ''){	search_tabover(cate,'Y');}function search_tabover(no,onload = 'N') {	$('.tab_smart > li > a').removeClass('active');	$('.tab_smart > li[data-eq=""'+no+'""] > a').addClass('active');	$('.tabcnt').hide();	if(onload!='Y'){		$('.tabcnt li').removeClass('on');		$('input[class=eleVal]').val('');	}	$('.tabcnt_smart_'+no).show();	$('.tabcnt_type_'+no).show();	$('.tabcnt_selfbrand_'+no).show();	$('.tabcnt_brand_'+no).show();	$('.tabcnt_pmemo6_'+no).show();	$('.tabcnt_height_'+no).show();	var sizeCate = ['all','0103','0110','0111','0101','0109','0107','0108','0601','2309'];	if( sizeCate.indexOf(no) >= 0 ){		$('.tabcnt_size').show();	}else{		$('.tabcnt_size').hide().find('li').removeClass('on');	}	var seasonCate = ['all','0103','0110','0111','0101','0109','0107','0108','0601','2309'];	if( seasonCate.indexOf(no) >= 0 ){		$('.tabcnt_season').show();	}else{		$('.tabcnt_season').hide().find('li').removeClass('on');	}	var pmemo3Cate = ['0103','0110','0111','0101','0109','0107','0108','0601','2309'];	if( pmemo3Cate.indexOf(no) >= 0 ){		$('.tabcnt_pmemo3').show();	}else{		$('.tabcnt_pmemo3').hide().find('li').removeClass('on');	}	var pmemo5Cate = ['0103','0110','0111','0101','0109','0107','0108','0601'];	if( pmemo5Cate.indexOf(no) >= 0 ){		$('.tabcnt_pmemo5').show();	}else{		$('.tabcnt_pmemo5').hide().find('li').removeClass('on');	}	var pmemo15Cate = ['all','0103','0110','0111','0101','0109','0107','0108','0601'];	if( pmemo15Cate.indexOf(no) >= 0 ){		$('.tabcnt_pmemo15').show();	}else{		$('.tabcnt_pmemo15').hide().find('li').removeClass('on');	}	var pmemo2Cate = ['0103','0110','0111','0101','0109','0107','0108','0601','2309'];	if( pmemo2Cate.indexOf(no) >= 0 ){		$('.tabcnt_pmemo2').show();	}else{		$('.tabcnt_pmemo2').hide().find('li').removeClass('on');	}	var pmemo14Cate = ['0101','0107','0108'];	if( pmemo14Cate.indexOf(no) >= 0 ){		$('.tabcnt_pmemo14').show();	}else{		$('.tabcnt_pmemo14').hide().find('li').removeClass('on');	}	var neckCate =  ['all','0103','0110','0111','0101','0109','0107','0601','2309'];	if( neckCate.indexOf(no) >= 0 ){		$('.tabcnt_neck').show();	}else{		$('.tabcnt_neck').hide().find('li').removeClass('on');	}	var styleCate = ['all','0103','0110','0111','0101','0109','0107','0108','0601'];	if( styleCate.indexOf(no) >= 0 ){		$('.tabcnt_style').show();	}else{		$('.tabcnt_style').hide().find('li').removeClass('on');	}}","이 코드는 ""탭뷰"" 기능을 제어하는 스크립트입니다. 주어진 카테고리에 따라 탭을 활성화하고 비활성화하는 역할을 합니다. 또한 특정 카테고리에 따라 다양한 하위 카테고리를 보여주거나 숨기는 역할도 합니다.",
"// 프로모션 카운트다운var promotionEndTime = '278631';function countTime(seconds) {	if(promotionEndTime < 1 || !promotionEndTime){		clearInterval(promotioncount);		$('.promotionEndTime').text(""00:00:00"");		return;	}	var minutes = Math.floor(seconds / 60);	seconds %= 60;	var hours = Math.floor(minutes / 60);	minutes %= 60;	var days = Math.floor(hours / 24);	hours %= 24;	hours = (hours+'') .padStart(2, '0');	minutes = (minutes+'') .padStart(2, '0');	seconds = (seconds+'') .padStart(2, '0');	var daytext = days > 0 ? days+'일 ' : '';	var daytext = '';	$('.promotionEndTime').text(daytext+hours+"" : ""+minutes+"" : ""+seconds);}var promotioncount = setInterval(() => {	countTime(promotionEndTime);	promotionEndTime--;}, 1000);// gif 스크롤시 움직이게var gifLib = {	frames:'',	load:()=>{ // 정지 이미지 구현		gifLib.tracking();	},	ani:new IntersectionObserver((entries) => { // 트래킹 함수		entries.forEach((entry) => {			const target = entry.target;			if (entry.isIntersecting){				target.src = target.src;			}		});	}),	tracking:()=>{		// document.querySelectorAll('.gifLibBox .prdimg a img:not(.gif-lib-track)').forEach(item=>{		document.querySelectorAll('img[src*=\'.gif\']:not(.gif-lib-track)').forEach(item=>{			item.classList.add('gif-lib-track');			gifLib.ani.observe(item);		});	}}$(""img[src*=\'.gif\'].gif-lib-track"").removeClass('gif-lib-track');gifLib.load();$(window).ajaxSuccess( function(){ gifLib.load(); });","```plaintext
프로모션 카운트다운
promotionEndTime = '278631'

gif 스크롤시 움직이게
gifLib
frames = ''
```",
"(async()=>{    var phpself = ""/index.php"";    fetch(""/api/self/urlCheck.php?url=""+phpself);})();","해석: ""해당 스크립트는 비동기 함수를 사용하여 ""/index.php"" 경로를 변수 phpself에 저장한 후, fetch 함수를 사용하여 ""/api/self/urlCheck.php?url=""+phpself 경로로 요청을 보내는 역할을 합니다.""",
